
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004c  00800100  00000c8c  00000d20  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c8c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000068  0080014c  0080014c  00000d6c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000d6c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d9c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000ddc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001aa1  00000000  00000000  00000e84  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a8b  00000000  00000000  00002925  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000aad  00000000  00000000  000033b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000168  00000000  00000000  00003e60  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000665  00000000  00000000  00003fc8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001455  00000000  00000000  0000462d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  00005a82  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 8a 05 	jmp	0xb14	; 0xb14 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e8       	ldi	r30, 0x8C	; 140
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 34       	cpi	r26, 0x4C	; 76
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ac e4       	ldi	r26, 0x4C	; 76
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a4 3b       	cpi	r26, 0xB4	; 180
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 9a 01 	call	0x334	; 0x334 <main>
  9e:	0c 94 44 06 	jmp	0xc88	; 0xc88 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <lcdCommand>:

#include "lcd.h"


void lcdCommand( unsigned char cmnd){
	LCD_PRT = (LCD_PRT & 0x0F)|(cmnd & 0xF0);
  a6:	9b b1       	in	r25, 0x0b	; 11
  a8:	9f 70       	andi	r25, 0x0F	; 15
  aa:	28 2f       	mov	r18, r24
  ac:	20 7f       	andi	r18, 0xF0	; 240
  ae:	92 2b       	or	r25, r18
  b0:	9b b9       	out	0x0b, r25	; 11
	LCD_PRT_RS &=~(1<<LCD_RS);   //RS = 0 for command
  b2:	95 b1       	in	r25, 0x05	; 5
  b4:	9d 7f       	andi	r25, 0xFD	; 253
  b6:	95 b9       	out	0x05, r25	; 5
	//LCD_PRT &=~(1<<LCD_RW);
	LCD_PRT_EN |= (1<<LCD_EN);    // high to low pulse
  b8:	95 b1       	in	r25, 0x05	; 5
  ba:	91 60       	ori	r25, 0x01	; 1
  bc:	95 b9       	out	0x05, r25	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  be:	35 e0       	ldi	r19, 0x05	; 5
  c0:	3a 95       	dec	r19
  c2:	f1 f7       	brne	.-4      	; 0xc0 <lcdCommand+0x1a>
  c4:	00 00       	nop
	_delay_us(1);
	LCD_PRT_EN &=~(1<<LCD_EN);
  c6:	95 b1       	in	r25, 0x05	; 5
  c8:	9e 7f       	andi	r25, 0xFE	; 254
  ca:	95 b9       	out	0x05, r25	; 5
  cc:	ef e1       	ldi	r30, 0x1F	; 31
  ce:	f3 e0       	ldi	r31, 0x03	; 3
  d0:	31 97       	sbiw	r30, 0x01	; 1
  d2:	f1 f7       	brne	.-4      	; 0xd0 <lcdCommand+0x2a>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <lcdCommand+0x30>
  d6:	00 00       	nop
	_delay_us(200);
	LCD_PRT = (LCD_PRT&0x0F)|(cmnd<<4);
  d8:	2b b1       	in	r18, 0x0b	; 11
  da:	f0 e1       	ldi	r31, 0x10	; 16
  dc:	8f 9f       	mul	r24, r31
  de:	c0 01       	movw	r24, r0
  e0:	11 24       	eor	r1, r1
  e2:	92 2f       	mov	r25, r18
  e4:	9f 70       	andi	r25, 0x0F	; 15
  e6:	89 2b       	or	r24, r25
  e8:	8b b9       	out	0x0b, r24	; 11
	LCD_PRT_EN |= (1<<LCD_EN);
  ea:	85 b1       	in	r24, 0x05	; 5
  ec:	81 60       	ori	r24, 0x01	; 1
  ee:	85 b9       	out	0x05, r24	; 5
  f0:	35 e0       	ldi	r19, 0x05	; 5
  f2:	3a 95       	dec	r19
  f4:	f1 f7       	brne	.-4      	; 0xf2 <lcdCommand+0x4c>
  f6:	00 00       	nop
	_delay_us(1);
	LCD_PRT_EN &= ~(1<<LCD_EN);
  f8:	85 b1       	in	r24, 0x05	; 5
  fa:	8e 7f       	andi	r24, 0xFE	; 254
  fc:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  fe:	8f e3       	ldi	r24, 0x3F	; 63
 100:	9f e1       	ldi	r25, 0x1F	; 31
 102:	01 97       	sbiw	r24, 0x01	; 1
 104:	f1 f7       	brne	.-4      	; 0x102 <lcdCommand+0x5c>
 106:	00 c0       	rjmp	.+0      	; 0x108 <lcdCommand+0x62>
 108:	00 00       	nop
 10a:	08 95       	ret

0000010c <lcdData>:
	_delay_ms(2);
}

void lcdData (unsigned char data){
	LCD_PRT = (LCD_PRT & 0x0F)|(data & 0xF0);
 10c:	9b b1       	in	r25, 0x0b	; 11
 10e:	9f 70       	andi	r25, 0x0F	; 15
 110:	28 2f       	mov	r18, r24
 112:	20 7f       	andi	r18, 0xF0	; 240
 114:	92 2b       	or	r25, r18
 116:	9b b9       	out	0x0b, r25	; 11
	LCD_PRT_RS |= (1<<LCD_RS);
 118:	95 b1       	in	r25, 0x05	; 5
 11a:	92 60       	ori	r25, 0x02	; 2
 11c:	95 b9       	out	0x05, r25	; 5
	//LCD_PRT &=~(1<<LCD_RW);
	LCD_PRT_EN |= (1<<LCD_EN);
 11e:	95 b1       	in	r25, 0x05	; 5
 120:	91 60       	ori	r25, 0x01	; 1
 122:	95 b9       	out	0x05, r25	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 124:	35 e0       	ldi	r19, 0x05	; 5
 126:	3a 95       	dec	r19
 128:	f1 f7       	brne	.-4      	; 0x126 <lcdData+0x1a>
 12a:	00 00       	nop
	_delay_us(1);
	LCD_PRT_EN &=~(1<<LCD_EN);
 12c:	95 b1       	in	r25, 0x05	; 5
 12e:	9e 7f       	andi	r25, 0xFE	; 254
 130:	95 b9       	out	0x05, r25	; 5
 132:	ef e1       	ldi	r30, 0x1F	; 31
 134:	f3 e0       	ldi	r31, 0x03	; 3
 136:	31 97       	sbiw	r30, 0x01	; 1
 138:	f1 f7       	brne	.-4      	; 0x136 <lcdData+0x2a>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <lcdData+0x30>
 13c:	00 00       	nop
	_delay_us(200);
	LCD_PRT = (LCD_PRT&0x0F)|(data<<4);
 13e:	2b b1       	in	r18, 0x0b	; 11
 140:	f0 e1       	ldi	r31, 0x10	; 16
 142:	8f 9f       	mul	r24, r31
 144:	c0 01       	movw	r24, r0
 146:	11 24       	eor	r1, r1
 148:	92 2f       	mov	r25, r18
 14a:	9f 70       	andi	r25, 0x0F	; 15
 14c:	89 2b       	or	r24, r25
 14e:	8b b9       	out	0x0b, r24	; 11
	LCD_PRT_EN |= (1<<LCD_EN);
 150:	85 b1       	in	r24, 0x05	; 5
 152:	81 60       	ori	r24, 0x01	; 1
 154:	85 b9       	out	0x05, r24	; 5
 156:	35 e0       	ldi	r19, 0x05	; 5
 158:	3a 95       	dec	r19
 15a:	f1 f7       	brne	.-4      	; 0x158 <lcdData+0x4c>
 15c:	00 00       	nop
	_delay_us(1);
	LCD_PRT_EN &=~ (1<<LCD_EN);
 15e:	85 b1       	in	r24, 0x05	; 5
 160:	8e 7f       	andi	r24, 0xFE	; 254
 162:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 164:	8f e3       	ldi	r24, 0x3F	; 63
 166:	9f e1       	ldi	r25, 0x1F	; 31
 168:	01 97       	sbiw	r24, 0x01	; 1
 16a:	f1 f7       	brne	.-4      	; 0x168 <lcdData+0x5c>
 16c:	00 c0       	rjmp	.+0      	; 0x16e <lcdData+0x62>
 16e:	00 00       	nop
 170:	08 95       	ret

00000172 <lcd_init>:
	_delay_ms(2);
}


void lcd_init(){
	LCD_DDR = 0xFF;
 172:	8f ef       	ldi	r24, 0xFF	; 255
 174:	8a b9       	out	0x0a, r24	; 10
	LCD_DDR_EN |= (1<<LCD_EN);
 176:	84 b1       	in	r24, 0x04	; 4
 178:	81 60       	ori	r24, 0x01	; 1
 17a:	84 b9       	out	0x04, r24	; 4
	LCD_DDR_RS |= (1<<LCD_RS);
 17c:	84 b1       	in	r24, 0x04	; 4
 17e:	82 60       	ori	r24, 0x02	; 2
 180:	84 b9       	out	0x04, r24	; 4
 182:	2f ef       	ldi	r18, 0xFF	; 255
 184:	89 ef       	ldi	r24, 0xF9	; 249
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	21 50       	subi	r18, 0x01	; 1
 18a:	80 40       	sbci	r24, 0x00	; 0
 18c:	90 40       	sbci	r25, 0x00	; 0
 18e:	e1 f7       	brne	.-8      	; 0x188 <lcd_init+0x16>
 190:	00 c0       	rjmp	.+0      	; 0x192 <lcd_init+0x20>
 192:	00 00       	nop
	_delay_ms(20);
	LCD_PRT_EN &=~(1<<LCD_EN);   //EN = 0
 194:	85 b1       	in	r24, 0x05	; 5
 196:	8e 7f       	andi	r24, 0xFE	; 254
 198:	85 b9       	out	0x05, r24	; 5
	//_delay_ms(20);
	lcdCommand(0x33);
 19a:	83 e3       	ldi	r24, 0x33	; 51
 19c:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdCommand>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1a0:	8f e8       	ldi	r24, 0x8F	; 143
 1a2:	91 e0       	ldi	r25, 0x01	; 1
 1a4:	01 97       	sbiw	r24, 0x01	; 1
 1a6:	f1 f7       	brne	.-4      	; 0x1a4 <lcd_init+0x32>
 1a8:	00 c0       	rjmp	.+0      	; 0x1aa <lcd_init+0x38>
 1aa:	00 00       	nop
	_delay_us(100);
	lcdCommand(0x32);
 1ac:	82 e3       	ldi	r24, 0x32	; 50
 1ae:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdCommand>
 1b2:	8f e8       	ldi	r24, 0x8F	; 143
 1b4:	91 e0       	ldi	r25, 0x01	; 1
 1b6:	01 97       	sbiw	r24, 0x01	; 1
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <lcd_init+0x44>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <lcd_init+0x4a>
 1bc:	00 00       	nop
	_delay_us(100);
	lcdCommand(0x28);
 1be:	88 e2       	ldi	r24, 0x28	; 40
 1c0:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdCommand>
 1c4:	8f e8       	ldi	r24, 0x8F	; 143
 1c6:	91 e0       	ldi	r25, 0x01	; 1
 1c8:	01 97       	sbiw	r24, 0x01	; 1
 1ca:	f1 f7       	brne	.-4      	; 0x1c8 <lcd_init+0x56>
 1cc:	00 c0       	rjmp	.+0      	; 0x1ce <lcd_init+0x5c>
 1ce:	00 00       	nop
	_delay_us(100);
	lcdCommand(0x0c);
 1d0:	8c e0       	ldi	r24, 0x0C	; 12
 1d2:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdCommand>
 1d6:	8f e8       	ldi	r24, 0x8F	; 143
 1d8:	91 e0       	ldi	r25, 0x01	; 1
 1da:	01 97       	sbiw	r24, 0x01	; 1
 1dc:	f1 f7       	brne	.-4      	; 0x1da <lcd_init+0x68>
 1de:	00 c0       	rjmp	.+0      	; 0x1e0 <lcd_init+0x6e>
 1e0:	00 00       	nop
	_delay_us(100);
	lcdCommand(0x01);
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdCommand>
 1e8:	8f e8       	ldi	r24, 0x8F	; 143
 1ea:	91 e0       	ldi	r25, 0x01	; 1
 1ec:	01 97       	sbiw	r24, 0x01	; 1
 1ee:	f1 f7       	brne	.-4      	; 0x1ec <lcd_init+0x7a>
 1f0:	00 c0       	rjmp	.+0      	; 0x1f2 <lcd_init+0x80>
 1f2:	00 00       	nop
	_delay_us(100);
	lcdCommand(0x06);
 1f4:	86 e0       	ldi	r24, 0x06	; 6
 1f6:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdCommand>
 1fa:	8f e8       	ldi	r24, 0x8F	; 143
 1fc:	91 e0       	ldi	r25, 0x01	; 1
 1fe:	01 97       	sbiw	r24, 0x01	; 1
 200:	f1 f7       	brne	.-4      	; 0x1fe <lcd_init+0x8c>
 202:	00 c0       	rjmp	.+0      	; 0x204 <lcd_init+0x92>
 204:	00 00       	nop
	_delay_us(100);
	lcdCommand(0x02);		/* send for 4 bit initialization of LCD  */
 206:	82 e0       	ldi	r24, 0x02	; 2
 208:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdCommand>
 20c:	8f e8       	ldi	r24, 0x8F	; 143
 20e:	91 e0       	ldi	r25, 0x01	; 1
 210:	01 97       	sbiw	r24, 0x01	; 1
 212:	f1 f7       	brne	.-4      	; 0x210 <lcd_init+0x9e>
 214:	00 c0       	rjmp	.+0      	; 0x216 <lcd_init+0xa4>
 216:	00 00       	nop
	_delay_us(100);
	lcdCommand(0x28);              /* 2 line, 5*7 matrix in 4-bit mode */
 218:	88 e2       	ldi	r24, 0x28	; 40
 21a:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdCommand>
 21e:	8f e8       	ldi	r24, 0x8F	; 143
 220:	91 e0       	ldi	r25, 0x01	; 1
 222:	01 97       	sbiw	r24, 0x01	; 1
 224:	f1 f7       	brne	.-4      	; 0x222 <lcd_init+0xb0>
 226:	00 c0       	rjmp	.+0      	; 0x228 <lcd_init+0xb6>
 228:	00 00       	nop
	_delay_us(100);
	lcdCommand(0x0c);              /* Display on cursor off*/
 22a:	8c e0       	ldi	r24, 0x0C	; 12
 22c:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdCommand>
 230:	8f e8       	ldi	r24, 0x8F	; 143
 232:	91 e0       	ldi	r25, 0x01	; 1
 234:	01 97       	sbiw	r24, 0x01	; 1
 236:	f1 f7       	brne	.-4      	; 0x234 <lcd_init+0xc2>
 238:	00 c0       	rjmp	.+0      	; 0x23a <lcd_init+0xc8>
 23a:	00 00       	nop
	_delay_us(100);
	lcdCommand(0x06);              /* Increment cursor (shift cursor to right)*/
 23c:	86 e0       	ldi	r24, 0x06	; 6
 23e:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdCommand>
 242:	8f e8       	ldi	r24, 0x8F	; 143
 244:	91 e0       	ldi	r25, 0x01	; 1
 246:	01 97       	sbiw	r24, 0x01	; 1
 248:	f1 f7       	brne	.-4      	; 0x246 <lcd_init+0xd4>
 24a:	00 c0       	rjmp	.+0      	; 0x24c <lcd_init+0xda>
 24c:	00 00       	nop
	_delay_us(100);
	lcdCommand(0x01);              /* Clear display screen*/
 24e:	81 e0       	ldi	r24, 0x01	; 1
 250:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdCommand>
 254:	8f e8       	ldi	r24, 0x8F	; 143
 256:	91 e0       	ldi	r25, 0x01	; 1
 258:	01 97       	sbiw	r24, 0x01	; 1
 25a:	f1 f7       	brne	.-4      	; 0x258 <lcd_init+0xe6>
 25c:	00 c0       	rjmp	.+0      	; 0x25e <lcd_init+0xec>
 25e:	00 00       	nop
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 260:	8f e3       	ldi	r24, 0x3F	; 63
 262:	9f e1       	ldi	r25, 0x1F	; 31
 264:	01 97       	sbiw	r24, 0x01	; 1
 266:	f1 f7       	brne	.-4      	; 0x264 <lcd_init+0xf2>
 268:	00 c0       	rjmp	.+0      	; 0x26a <lcd_init+0xf8>
 26a:	00 00       	nop
 26c:	08 95       	ret

0000026e <lcd_gotoxy>:
	_delay_ms(2);
}


void lcd_gotoxy(unsigned char x, unsigned char y)
{
 26e:	cf 93       	push	r28
 270:	df 93       	push	r29
 272:	00 d0       	rcall	.+0      	; 0x274 <lcd_gotoxy+0x6>
 274:	00 d0       	rcall	.+0      	; 0x276 <lcd_gotoxy+0x8>
 276:	cd b7       	in	r28, 0x3d	; 61
 278:	de b7       	in	r29, 0x3e	; 62
	unsigned char firstCharAdr[]={0x80,0xC0,0x94,0xD4};
 27a:	90 e8       	ldi	r25, 0x80	; 128
 27c:	99 83       	std	Y+1, r25	; 0x01
 27e:	90 ec       	ldi	r25, 0xC0	; 192
 280:	9a 83       	std	Y+2, r25	; 0x02
 282:	94 e9       	ldi	r25, 0x94	; 148
 284:	9b 83       	std	Y+3, r25	; 0x03
 286:	94 ed       	ldi	r25, 0xD4	; 212
 288:	9c 83       	std	Y+4, r25	; 0x04
	lcdCommand(firstCharAdr[x-1]+y-1);
 28a:	e8 2f       	mov	r30, r24
 28c:	f0 e0       	ldi	r31, 0x00	; 0
 28e:	31 97       	sbiw	r30, 0x01	; 1
 290:	81 e0       	ldi	r24, 0x01	; 1
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	8c 0f       	add	r24, r28
 296:	9d 1f       	adc	r25, r29
 298:	e8 0f       	add	r30, r24
 29a:	f9 1f       	adc	r31, r25
 29c:	80 81       	ld	r24, Z
 29e:	86 0f       	add	r24, r22
 2a0:	81 50       	subi	r24, 0x01	; 1
 2a2:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdCommand>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2a6:	8f e8       	ldi	r24, 0x8F	; 143
 2a8:	91 e0       	ldi	r25, 0x01	; 1
 2aa:	01 97       	sbiw	r24, 0x01	; 1
 2ac:	f1 f7       	brne	.-4      	; 0x2aa <lcd_gotoxy+0x3c>
 2ae:	00 c0       	rjmp	.+0      	; 0x2b0 <lcd_gotoxy+0x42>
 2b0:	00 00       	nop
	_delay_us(100);
}
 2b2:	0f 90       	pop	r0
 2b4:	0f 90       	pop	r0
 2b6:	0f 90       	pop	r0
 2b8:	0f 90       	pop	r0
 2ba:	df 91       	pop	r29
 2bc:	cf 91       	pop	r28
 2be:	08 95       	ret

000002c0 <lcd_print>:


void lcd_print(char*str)
{
 2c0:	0f 93       	push	r16
 2c2:	1f 93       	push	r17
 2c4:	cf 93       	push	r28
 2c6:	df 93       	push	r29
 2c8:	8c 01       	movw	r16, r24
	int i=0;
	for(i=0;str[i]!=0;i++){     ///* Send each char of string till the NULL */
 2ca:	c0 e0       	ldi	r28, 0x00	; 0
 2cc:	d0 e0       	ldi	r29, 0x00	; 0
 2ce:	03 c0       	rjmp	.+6      	; 0x2d6 <lcd_print+0x16>
		lcdData(str[i]);
 2d0:	0e 94 86 00 	call	0x10c	; 0x10c <lcdData>


void lcd_print(char*str)
{
	int i=0;
	for(i=0;str[i]!=0;i++){     ///* Send each char of string till the NULL */
 2d4:	21 96       	adiw	r28, 0x01	; 1
 2d6:	f8 01       	movw	r30, r16
 2d8:	ec 0f       	add	r30, r28
 2da:	fd 1f       	adc	r31, r29
 2dc:	80 81       	ld	r24, Z
 2de:	81 11       	cpse	r24, r1
 2e0:	f7 cf       	rjmp	.-18     	; 0x2d0 <lcd_print+0x10>
		lcdData(str[i]);
	}
}
 2e2:	df 91       	pop	r29
 2e4:	cf 91       	pop	r28
 2e6:	1f 91       	pop	r17
 2e8:	0f 91       	pop	r16
 2ea:	08 95       	ret

000002ec <lcd_clear>:

void lcd_clear()
{
	lcdCommand(0x01);
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdCommand>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2f2:	8f e3       	ldi	r24, 0x3F	; 63
 2f4:	9f e1       	ldi	r25, 0x1F	; 31
 2f6:	01 97       	sbiw	r24, 0x01	; 1
 2f8:	f1 f7       	brne	.-4      	; 0x2f6 <lcd_clear+0xa>
 2fa:	00 c0       	rjmp	.+0      	; 0x2fc <lcd_clear+0x10>
 2fc:	00 00       	nop
	_delay_ms(2);
	lcdCommand(0x80);           //cursor at home position
 2fe:	80 e8       	ldi	r24, 0x80	; 128
 300:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdCommand>
 304:	8f e3       	ldi	r24, 0x3F	; 63
 306:	9f e1       	ldi	r25, 0x1F	; 31
 308:	01 97       	sbiw	r24, 0x01	; 1
 30a:	f1 f7       	brne	.-4      	; 0x308 <lcd_clear+0x1c>
 30c:	00 c0       	rjmp	.+0      	; 0x30e <lcd_clear+0x22>
 30e:	00 00       	nop
 310:	08 95       	ret

00000312 <USART_Init>:
{
	int i=0;
	for(i=0;str[i]!=0;i++){     ///* Send each char of string till the NULL */
		USART_Transmit(str[i]);
	}
}
 312:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 316:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 31a:	88 e1       	ldi	r24, 0x18	; 24
 31c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 320:	86 e0       	ldi	r24, 0x06	; 6
 322:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 326:	08 95       	ret

00000328 <uart_interrupt_init>:

void uart_interrupt_init()
{
	UCSR0B|=(1<<RXCIE0);
 328:	e1 ec       	ldi	r30, 0xC1	; 193
 32a:	f0 e0       	ldi	r31, 0x00	; 0
 32c:	80 81       	ld	r24, Z
 32e:	80 68       	ori	r24, 0x80	; 128
 330:	80 83       	st	Z, r24
 332:	08 95       	ret

00000334 <main>:
volatile int bien_dem_luu_tru = 0; 




int main(){
 334:	cf 93       	push	r28
 336:	df 93       	push	r29
 338:	cd b7       	in	r28, 0x3d	; 61
 33a:	de b7       	in	r29, 0x3e	; 62
 33c:	ca 52       	subi	r28, 0x2A	; 42
 33e:	d3 40       	sbci	r29, 0x03	; 3
 340:	0f b6       	in	r0, 0x3f	; 63
 342:	f8 94       	cli
 344:	de bf       	out	0x3e, r29	; 62
 346:	0f be       	out	0x3f, r0	; 63
 348:	cd bf       	out	0x3d, r28	; 61
	char data_temp_1[3],data_hum_1[3];
	char ID_1[] = "4C:75:25:06:A1:E7"; //ID hien dang co
 34a:	82 e1       	ldi	r24, 0x12	; 18
 34c:	e5 e1       	ldi	r30, 0x15	; 21
 34e:	f1 e0       	ldi	r31, 0x01	; 1
 350:	de 01       	movw	r26, r28
 352:	17 96       	adiw	r26, 0x07	; 7
 354:	01 90       	ld	r0, Z+
 356:	0d 92       	st	X+, r0
 358:	8a 95       	dec	r24
 35a:	e1 f7       	brne	.-8      	; 0x354 <main+0x20>


	char data_temp_2[3],data_hum_2[3];
	char ID_2[] = "AC:0B:FB:CE:AD:1F";   // ID hien dang co;
 35c:	82 e1       	ldi	r24, 0x12	; 18
 35e:	e7 e2       	ldi	r30, 0x27	; 39
 360:	f1 e0       	ldi	r31, 0x01	; 1
 362:	de 01       	movw	r26, r28
 364:	5f 96       	adiw	r26, 0x1f	; 31
 366:	01 90       	ld	r0, Z+
 368:	0d 92       	st	X+, r0
 36a:	8a 95       	dec	r24
 36c:	e1 f7       	brne	.-8      	; 0x366 <main+0x32>
	
	char data_temp_3[3],data_hum_3[3];
	char ID_3[] = "EC:FA:BC:5F:84:A9"; //ID hien dang co
 36e:	82 e1       	ldi	r24, 0x12	; 18
 370:	e9 e3       	ldi	r30, 0x39	; 57
 372:	f1 e0       	ldi	r31, 0x01	; 1
 374:	de 01       	movw	r26, r28
 376:	d7 96       	adiw	r26, 0x37	; 55
 378:	01 90       	ld	r0, Z+
 37a:	0d 92       	st	X+, r0
 37c:	8a 95       	dec	r24
 37e:	e1 f7       	brne	.-8      	; 0x378 <main+0x44>


	char luu_tru_ID[18];   // dung ham for lay tung chu cai id ra luu vao day
	// neu luu tung ki tu thi them ky tu null vao cuoi cung de thanh string

	int du_lieu_temp_1[50]={0};
 380:	fe 01       	movw	r30, r28
 382:	e5 5a       	subi	r30, 0xA5	; 165
 384:	ff 4f       	sbci	r31, 0xFF	; 255
 386:	84 e6       	ldi	r24, 0x64	; 100
 388:	df 01       	movw	r26, r30
 38a:	28 2f       	mov	r18, r24
 38c:	1d 92       	st	X+, r1
 38e:	2a 95       	dec	r18
 390:	e9 f7       	brne	.-6      	; 0x38c <main+0x58>
	int du_lieu_hum_1[50]={0};
 392:	ec 59       	subi	r30, 0x9C	; 156
 394:	ff 4f       	sbci	r31, 0xFF	; 255
 396:	df 01       	movw	r26, r30
 398:	28 2f       	mov	r18, r24
 39a:	1d 92       	st	X+, r1
 39c:	2a 95       	dec	r18
 39e:	e9 f7       	brne	.-6      	; 0x39a <main+0x66>


	int du_lieu_temp_2[50]={0};
 3a0:	ec 59       	subi	r30, 0x9C	; 156
 3a2:	ff 4f       	sbci	r31, 0xFF	; 255
 3a4:	df 01       	movw	r26, r30
 3a6:	28 2f       	mov	r18, r24
 3a8:	1d 92       	st	X+, r1
 3aa:	2a 95       	dec	r18
 3ac:	e9 f7       	brne	.-6      	; 0x3a8 <main+0x74>
	int du_lieu_hum_2[50]={0};
 3ae:	ec 59       	subi	r30, 0x9C	; 156
 3b0:	ff 4f       	sbci	r31, 0xFF	; 255
 3b2:	df 01       	movw	r26, r30
 3b4:	28 2f       	mov	r18, r24
 3b6:	1d 92       	st	X+, r1
 3b8:	2a 95       	dec	r18
 3ba:	e9 f7       	brne	.-6      	; 0x3b6 <main+0x82>
		
	int du_lieu_temp_3[50]={0};
 3bc:	ec 59       	subi	r30, 0x9C	; 156
 3be:	ff 4f       	sbci	r31, 0xFF	; 255
 3c0:	df 01       	movw	r26, r30
 3c2:	28 2f       	mov	r18, r24
 3c4:	1d 92       	st	X+, r1
 3c6:	2a 95       	dec	r18
 3c8:	e9 f7       	brne	.-6      	; 0x3c4 <main+0x90>
	int du_lieu_hum_3[50]={0};
 3ca:	ec 59       	subi	r30, 0x9C	; 156
 3cc:	ff 4f       	sbci	r31, 0xFF	; 255
 3ce:	df 01       	movw	r26, r30
 3d0:	1d 92       	st	X+, r1
 3d2:	8a 95       	dec	r24
 3d4:	e9 f7       	brne	.-6      	; 0x3d0 <main+0x9c>
	int bien_dem_2=0,temp_2=0,hum_2=0,temp_tb_2=0,hum_tb_2=0;
	
	int bien_dem_3=0,temp_3=0,hum_3=0,temp_tb_3=0,hum_tb_3=0;

	char a1[50],a2[50]; // de luu cac string "re" va "ty"
	lcd_init();
 3d6:	0e 94 b9 00 	call	0x172	; 0x172 <lcd_init>
	USART_Init(MYUBRR);  
 3da:	87 e6       	ldi	r24, 0x67	; 103
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	0e 94 89 01 	call	0x312	; 0x312 <USART_Init>
	sei();
 3e2:	78 94       	sei
	uart_interrupt_init();  // init pin change interrupt 7 and 8, RX complete interrupt
 3e4:	0e 94 94 01 	call	0x328	; 0x328 <uart_interrupt_init>
	
	DDRC =0;    //PC1 and PC2 are input
 3e8:	17 b8       	out	0x07, r1	; 7
	PORTC |=(1<<PINC1)|(1<<PINC2)|(1<<PINC3);			//PINC1 and PINC2 and PINC3 internal pull-resister enable
 3ea:	88 b1       	in	r24, 0x08	; 8
 3ec:	8e 60       	ori	r24, 0x0E	; 14
 3ee:	88 b9       	out	0x08, r24	; 8
	int button_1;
	int button_2_before = 1;
	int button_2;
	 
	
	char* data_temp[] = {data_temp_1, data_temp_2, data_temp_3};
 3f0:	ce 01       	movw	r24, r28
 3f2:	01 96       	adiw	r24, 0x01	; 1
 3f4:	c9 5e       	subi	r28, 0xE9	; 233
 3f6:	dc 4f       	sbci	r29, 0xFC	; 252
 3f8:	99 83       	std	Y+1, r25	; 0x01
 3fa:	88 83       	st	Y, r24
 3fc:	c7 51       	subi	r28, 0x17	; 23
 3fe:	d3 40       	sbci	r29, 0x03	; 3
 400:	9e 01       	movw	r18, r28
 402:	27 5e       	subi	r18, 0xE7	; 231
 404:	3f 4f       	sbci	r19, 0xFF	; 255
 406:	c7 5e       	subi	r28, 0xE7	; 231
 408:	dc 4f       	sbci	r29, 0xFC	; 252
 40a:	39 83       	std	Y+1, r19	; 0x01
 40c:	28 83       	st	Y, r18
 40e:	c9 51       	subi	r28, 0x19	; 25
 410:	d3 40       	sbci	r29, 0x03	; 3
 412:	28 5e       	subi	r18, 0xE8	; 232
 414:	3f 4f       	sbci	r19, 0xFF	; 255
 416:	c5 5e       	subi	r28, 0xE5	; 229
 418:	dc 4f       	sbci	r29, 0xFC	; 252
 41a:	39 83       	std	Y+1, r19	; 0x01
 41c:	28 83       	st	Y, r18
 41e:	cb 51       	subi	r28, 0x1B	; 27
 420:	d3 40       	sbci	r29, 0x03	; 3
	char* data_hum[] = {data_hum_1, data_hum_2, data_hum_3};
 422:	2d 52       	subi	r18, 0x2D	; 45
 424:	31 09       	sbc	r19, r1
 426:	c3 5e       	subi	r28, 0xE3	; 227
 428:	dc 4f       	sbci	r29, 0xFC	; 252
 42a:	39 83       	std	Y+1, r19	; 0x01
 42c:	28 83       	st	Y, r18
 42e:	cd 51       	subi	r28, 0x1D	; 29
 430:	d3 40       	sbci	r29, 0x03	; 3
 432:	ae 01       	movw	r20, r28
 434:	44 5e       	subi	r20, 0xE4	; 228
 436:	5f 4f       	sbci	r21, 0xFF	; 255
 438:	c1 5e       	subi	r28, 0xE1	; 225
 43a:	dc 4f       	sbci	r29, 0xFC	; 252
 43c:	59 83       	std	Y+1, r21	; 0x01
 43e:	48 83       	st	Y, r20
 440:	cf 51       	subi	r28, 0x1F	; 31
 442:	d3 40       	sbci	r29, 0x03	; 3
 444:	48 5e       	subi	r20, 0xE8	; 232
 446:	5f 4f       	sbci	r21, 0xFF	; 255
 448:	cf 5d       	subi	r28, 0xDF	; 223
 44a:	dc 4f       	sbci	r29, 0xFC	; 252
 44c:	59 83       	std	Y+1, r21	; 0x01
 44e:	48 83       	st	Y, r20
 450:	c1 52       	subi	r28, 0x21	; 33
 452:	d3 40       	sbci	r29, 0x03	; 3
	char* ID[] = {ID_1, ID_2, ID_3}; 
 454:	4d 52       	subi	r20, 0x2D	; 45
 456:	51 09       	sbc	r21, r1
 458:	cd 5d       	subi	r28, 0xDD	; 221
 45a:	dc 4f       	sbci	r29, 0xFC	; 252
 45c:	59 83       	std	Y+1, r21	; 0x01
 45e:	48 83       	st	Y, r20
 460:	c3 52       	subi	r28, 0x23	; 35
 462:	d3 40       	sbci	r29, 0x03	; 3
 464:	be 01       	movw	r22, r28
 466:	61 5e       	subi	r22, 0xE1	; 225
 468:	7f 4f       	sbci	r23, 0xFF	; 255
 46a:	cb 5d       	subi	r28, 0xDB	; 219
 46c:	dc 4f       	sbci	r29, 0xFC	; 252
 46e:	79 83       	std	Y+1, r23	; 0x01
 470:	68 83       	st	Y, r22
 472:	c5 52       	subi	r28, 0x25	; 37
 474:	d3 40       	sbci	r29, 0x03	; 3
 476:	68 5e       	subi	r22, 0xE8	; 232
 478:	7f 4f       	sbci	r23, 0xFF	; 255
 47a:	c9 5d       	subi	r28, 0xD9	; 217
 47c:	dc 4f       	sbci	r29, 0xFC	; 252
 47e:	79 83       	std	Y+1, r23	; 0x01
 480:	68 83       	st	Y, r22
 482:	c7 52       	subi	r28, 0x27	; 39
 484:	d3 40       	sbci	r29, 0x03	; 3
	int index = 0;
 486:	00 e0       	ldi	r16, 0x00	; 0
 488:	10 e0       	ldi	r17, 0x00	; 0
	
	
	//new code
	int button_1_before = 1;
	int button_1;
	int button_2_before = 1;
 48a:	cc 24       	eor	r12, r12
 48c:	c3 94       	inc	r12
 48e:	d1 2c       	mov	r13, r1
	
	
	
	
	//new code
	int button_1_before = 1;
 490:	ee 24       	eor	r14, r14
 492:	e3 94       	inc	r14
 494:	f1 2c       	mov	r15, r1

	int bien_dem_1=0,temp_1=0,hum_1=0,temp_tb_1=0,hum_tb_1=0;

	int bien_dem_2=0,temp_2=0,hum_2=0,temp_tb_2=0,hum_tb_2=0;
	
	int bien_dem_3=0,temp_3=0,hum_3=0,temp_tb_3=0,hum_tb_3=0;
 496:	81 2c       	mov	r8, r1
 498:	91 2c       	mov	r9, r1
	int du_lieu_temp_3[50]={0};
	int du_lieu_hum_3[50]={0};

	int bien_dem_1=0,temp_1=0,hum_1=0,temp_tb_1=0,hum_tb_1=0;

	int bien_dem_2=0,temp_2=0,hum_2=0,temp_tb_2=0,hum_tb_2=0;
 49a:	a1 2c       	mov	r10, r1
 49c:	b1 2c       	mov	r11, r1
	int du_lieu_hum_2[50]={0};
		
	int du_lieu_temp_3[50]={0};
	int du_lieu_hum_3[50]={0};

	int bien_dem_1=0,temp_1=0,hum_1=0,temp_tb_1=0,hum_tb_1=0;
 49e:	c7 5d       	subi	r28, 0xD7	; 215
 4a0:	dc 4f       	sbci	r29, 0xFC	; 252
 4a2:	19 82       	std	Y+1, r1	; 0x01
 4a4:	18 82       	st	Y, r1
 4a6:	c9 52       	subi	r28, 0x29	; 41
 4a8:	d3 40       	sbci	r29, 0x03	; 3
	char* data_hum[] = {data_hum_1, data_hum_2, data_hum_3};
	char* ID[] = {ID_1, ID_2, ID_3}; 
	int index = 0;
	real_time_data_temp = data_temp[index];
	real_time_data_hum = data_hum[index];
	real_time_ID = ID[index];
 4aa:	24 2e       	mov	r2, r20
 4ac:	35 2e       	mov	r3, r21
	char* data_temp[] = {data_temp_1, data_temp_2, data_temp_3};
	char* data_hum[] = {data_hum_1, data_hum_2, data_hum_3};
	char* ID[] = {ID_1, ID_2, ID_3}; 
	int index = 0;
	real_time_data_temp = data_temp[index];
	real_time_data_hum = data_hum[index];
 4ae:	42 2e       	mov	r4, r18
 4b0:	53 2e       	mov	r5, r19
	
	char* data_temp[] = {data_temp_1, data_temp_2, data_temp_3};
	char* data_hum[] = {data_hum_1, data_hum_2, data_hum_3};
	char* ID[] = {ID_1, ID_2, ID_3}; 
	int index = 0;
	real_time_data_temp = data_temp[index];
 4b2:	68 2e       	mov	r6, r24
 4b4:	79 2e       	mov	r7, r25
	
	
	while(1)
	{
		
		if(luu_tru_ready == 1 )
 4b6:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <luu_tru_ready>
 4ba:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <luu_tru_ready+0x1>
 4be:	01 97       	sbiw	r24, 0x01	; 1
 4c0:	09 f0       	breq	.+2      	; 0x4c4 <__EEPROM_REGION_LENGTH__+0xc4>
 4c2:	a0 c2       	rjmp	.+1344   	; 0xa04 <__stack+0x105>
 4c4:	0f c0       	rjmp	.+30     	; 0x4e4 <__EEPROM_REGION_LENGTH__+0xe4>
		{
				int i=0;
				for(i=7;i<=23;i++)
				{
					luu_tru_ID[i-7]=luu_tru[i];
 4c6:	fc 01       	movw	r30, r24
 4c8:	37 97       	sbiw	r30, 0x07	; 7
 4ca:	dc 01       	movw	r26, r24
 4cc:	a2 5b       	subi	r26, 0xB2	; 178
 4ce:	be 4f       	sbci	r27, 0xFE	; 254
 4d0:	2c 91       	ld	r18, X
 4d2:	49 e4       	ldi	r20, 0x49	; 73
 4d4:	50 e0       	ldi	r21, 0x00	; 0
 4d6:	4c 0f       	add	r20, r28
 4d8:	5d 1f       	adc	r21, r29
 4da:	e4 0f       	add	r30, r20
 4dc:	f5 1f       	adc	r31, r21
 4de:	20 83       	st	Z, r18
	{
		
		if(luu_tru_ready == 1 )
		{
				int i=0;
				for(i=7;i<=23;i++)
 4e0:	01 96       	adiw	r24, 0x01	; 1
 4e2:	02 c0       	rjmp	.+4      	; 0x4e8 <__EEPROM_REGION_LENGTH__+0xe8>
 4e4:	87 e0       	ldi	r24, 0x07	; 7
 4e6:	90 e0       	ldi	r25, 0x00	; 0
 4e8:	88 31       	cpi	r24, 0x18	; 24
 4ea:	91 05       	cpc	r25, r1
 4ec:	64 f3       	brlt	.-40     	; 0x4c6 <__EEPROM_REGION_LENGTH__+0xc6>
				{
					luu_tru_ID[i-7]=luu_tru[i];
				}
				luu_tru_ID[17] = '\0';   // luu ID gui den vao luu_tru_ID
 4ee:	6b 96       	adiw	r28, 0x1b	; 27
 4f0:	1f ae       	std	Y+63, r1	; 0x3f
 4f2:	6b 97       	sbiw	r28, 0x1b	; 27

		
		
				if(strcmp(luu_tru_ID,ID_1) == 0)// truong hop neu la ID_1
 4f4:	be 01       	movw	r22, r28
 4f6:	69 5f       	subi	r22, 0xF9	; 249
 4f8:	7f 4f       	sbci	r23, 0xFF	; 255
 4fa:	ce 01       	movw	r24, r28
 4fc:	87 5b       	subi	r24, 0xB7	; 183
 4fe:	9f 4f       	sbci	r25, 0xFF	; 255
 500:	0e 94 e5 05 	call	0xbca	; 0xbca <strcmp>
 504:	89 2b       	or	r24, r25
 506:	09 f0       	breq	.+2      	; 0x50a <__EEPROM_REGION_LENGTH__+0x10a>
 508:	d2 c0       	rjmp	.+420    	; 0x6ae <__EEPROM_REGION_LENGTH__+0x2ae>
					{
					   int k=0;
					   int j=0;
					 
					   strcpy(a1,strstr(luu_tru,"re"));
 50a:	60 e0       	ldi	r22, 0x00	; 0
 50c:	71 e0       	ldi	r23, 0x01	; 1
 50e:	8e e4       	ldi	r24, 0x4E	; 78
 510:	91 e0       	ldi	r25, 0x01	; 1
 512:	0e 94 f5 05 	call	0xbea	; 0xbea <strstr>
 516:	bc 01       	movw	r22, r24
 518:	ce 01       	movw	r24, r28
 51a:	8d 54       	subi	r24, 0x4D	; 77
 51c:	9d 4f       	sbci	r25, 0xFD	; 253
 51e:	0e 94 ee 05 	call	0xbdc	; 0xbdc <strcpy>
					   strcpy(a2,strstr(luu_tru,"ty"));
 522:	63 e0       	ldi	r22, 0x03	; 3
 524:	71 e0       	ldi	r23, 0x01	; 1
 526:	8e e4       	ldi	r24, 0x4E	; 78
 528:	91 e0       	ldi	r25, 0x01	; 1
 52a:	0e 94 f5 05 	call	0xbea	; 0xbea <strstr>
 52e:	bc 01       	movw	r22, r24
 530:	ce 01       	movw	r24, r28
 532:	8b 51       	subi	r24, 0x1B	; 27
 534:	9d 4f       	sbci	r25, 0xFD	; 253
 536:	0e 94 ee 05 	call	0xbdc	; 0xbdc <strcpy>
					   temp_1=(a1[4]-'0')*10+(a1[5]-'0');
 53a:	c9 54       	subi	r28, 0x49	; 73
 53c:	dd 4f       	sbci	r29, 0xFD	; 253
 53e:	88 81       	ld	r24, Y
 540:	c7 5b       	subi	r28, 0xB7	; 183
 542:	d2 40       	sbci	r29, 0x02	; 2
 544:	90 e0       	ldi	r25, 0x00	; 0
 546:	c0 97       	sbiw	r24, 0x30	; 48
 548:	9c 01       	movw	r18, r24
 54a:	22 0f       	add	r18, r18
 54c:	33 1f       	adc	r19, r19
 54e:	88 0f       	add	r24, r24
 550:	99 1f       	adc	r25, r25
 552:	88 0f       	add	r24, r24
 554:	99 1f       	adc	r25, r25
 556:	88 0f       	add	r24, r24
 558:	99 1f       	adc	r25, r25
 55a:	82 0f       	add	r24, r18
 55c:	93 1f       	adc	r25, r19
 55e:	c8 54       	subi	r28, 0x48	; 72
 560:	dd 4f       	sbci	r29, 0xFD	; 253
 562:	28 81       	ld	r18, Y
 564:	c8 5b       	subi	r28, 0xB8	; 184
 566:	d2 40       	sbci	r29, 0x02	; 2
 568:	30 e0       	ldi	r19, 0x00	; 0
 56a:	20 53       	subi	r18, 0x30	; 48
 56c:	31 09       	sbc	r19, r1
 56e:	82 0f       	add	r24, r18
 570:	93 1f       	adc	r25, r19
					   hum_1=(a2[4]-'0')*10+(a2[5]-'0');
 572:	c7 51       	subi	r28, 0x17	; 23
 574:	dd 4f       	sbci	r29, 0xFD	; 253
 576:	28 81       	ld	r18, Y
 578:	c9 5e       	subi	r28, 0xE9	; 233
 57a:	d2 40       	sbci	r29, 0x02	; 2
 57c:	30 e0       	ldi	r19, 0x00	; 0
 57e:	20 53       	subi	r18, 0x30	; 48
 580:	31 09       	sbc	r19, r1
 582:	a9 01       	movw	r20, r18
 584:	44 0f       	add	r20, r20
 586:	55 1f       	adc	r21, r21
 588:	22 0f       	add	r18, r18
 58a:	33 1f       	adc	r19, r19
 58c:	22 0f       	add	r18, r18
 58e:	33 1f       	adc	r19, r19
 590:	22 0f       	add	r18, r18
 592:	33 1f       	adc	r19, r19
 594:	24 0f       	add	r18, r20
 596:	35 1f       	adc	r19, r21
 598:	c6 51       	subi	r28, 0x16	; 22
 59a:	dd 4f       	sbci	r29, 0xFD	; 253
 59c:	48 81       	ld	r20, Y
 59e:	ca 5e       	subi	r28, 0xEA	; 234
 5a0:	d2 40       	sbci	r29, 0x02	; 2
 5a2:	50 e0       	ldi	r21, 0x00	; 0
 5a4:	40 53       	subi	r20, 0x30	; 48
 5a6:	51 09       	sbc	r21, r1
 5a8:	24 0f       	add	r18, r20
 5aa:	35 1f       	adc	r19, r21
					   du_lieu_temp_1[bien_dem_1]=temp_1;
 5ac:	c7 5d       	subi	r28, 0xD7	; 215
 5ae:	dc 4f       	sbci	r29, 0xFC	; 252
 5b0:	48 81       	ld	r20, Y
 5b2:	59 81       	ldd	r21, Y+1	; 0x01
 5b4:	c9 52       	subi	r28, 0x29	; 41
 5b6:	d3 40       	sbci	r29, 0x03	; 3
 5b8:	44 0f       	add	r20, r20
 5ba:	55 1f       	adc	r21, r21
 5bc:	eb e5       	ldi	r30, 0x5B	; 91
 5be:	f0 e0       	ldi	r31, 0x00	; 0
 5c0:	ec 0f       	add	r30, r28
 5c2:	fd 1f       	adc	r31, r29
 5c4:	e4 0f       	add	r30, r20
 5c6:	f5 1f       	adc	r31, r21
 5c8:	91 83       	std	Z+1, r25	; 0x01
 5ca:	80 83       	st	Z, r24
					   du_lieu_hum_1[bien_dem_1]=hum_1;
 5cc:	ef eb       	ldi	r30, 0xBF	; 191
 5ce:	f0 e0       	ldi	r31, 0x00	; 0
 5d0:	ec 0f       	add	r30, r28
 5d2:	fd 1f       	adc	r31, r29
 5d4:	e4 0f       	add	r30, r20
 5d6:	f5 1f       	adc	r31, r21
 5d8:	31 83       	std	Z+1, r19	; 0x01
 5da:	20 83       	st	Z, r18
		
		
				if(strcmp(luu_tru_ID,ID_1) == 0)// truong hop neu la ID_1
					{
					   int k=0;
					   int j=0;
 5dc:	60 e0       	ldi	r22, 0x00	; 0
 5de:	70 e0       	ldi	r23, 0x00	; 0
					   strcpy(a1,strstr(luu_tru,"re"));
					   strcpy(a2,strstr(luu_tru,"ty"));
					   temp_1=(a1[4]-'0')*10+(a1[5]-'0');
					   hum_1=(a2[4]-'0')*10+(a2[5]-'0');
					   du_lieu_temp_1[bien_dem_1]=temp_1;
					   du_lieu_hum_1[bien_dem_1]=hum_1;
 5e0:	80 e0       	ldi	r24, 0x00	; 0
 5e2:	90 e0       	ldi	r25, 0x00	; 0
			   

					   do
					   {
						   temp_tb_1+=du_lieu_temp_1[j];
 5e4:	fb 01       	movw	r30, r22
 5e6:	ee 0f       	add	r30, r30
 5e8:	ff 1f       	adc	r31, r31
 5ea:	ab e5       	ldi	r26, 0x5B	; 91
 5ec:	b0 e0       	ldi	r27, 0x00	; 0
 5ee:	ac 0f       	add	r26, r28
 5f0:	bd 1f       	adc	r27, r29
 5f2:	ea 0f       	add	r30, r26
 5f4:	fb 1f       	adc	r31, r27
 5f6:	20 81       	ld	r18, Z
 5f8:	31 81       	ldd	r19, Z+1	; 0x01
 5fa:	82 0f       	add	r24, r18
 5fc:	93 1f       	adc	r25, r19
						   j++;
 5fe:	6f 5f       	subi	r22, 0xFF	; 255
 600:	7f 4f       	sbci	r23, 0xFF	; 255
						   if(j==50)break;
 602:	62 33       	cpi	r22, 0x32	; 50
 604:	71 05       	cpc	r23, r1
 606:	49 f0       	breq	.+18     	; 0x61a <__EEPROM_REGION_LENGTH__+0x21a>
					   }while(du_lieu_temp_1[j]!='\0');
 608:	fb 01       	movw	r30, r22
 60a:	ee 0f       	add	r30, r30
 60c:	ff 1f       	adc	r31, r31
 60e:	ea 0f       	add	r30, r26
 610:	fb 1f       	adc	r31, r27
 612:	20 81       	ld	r18, Z
 614:	31 81       	ldd	r19, Z+1	; 0x01
 616:	23 2b       	or	r18, r19
 618:	29 f7       	brne	.-54     	; 0x5e4 <__EEPROM_REGION_LENGTH__+0x1e4>
					   temp_tb_1/=j;
 61a:	0e 94 bd 05 	call	0xb7a	; 0xb7a <__divmodhi4>
 61e:	cb 01       	movw	r24, r22
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 620:	4a e0       	ldi	r20, 0x0A	; 10
 622:	be 01       	movw	r22, r28
 624:	6f 5f       	subi	r22, 0xFF	; 255
 626:	7f 4f       	sbci	r23, 0xFF	; 255
 628:	0e 94 0f 06 	call	0xc1e	; 0xc1e <__itoa_ncheck>

		
		
				if(strcmp(luu_tru_ID,ID_1) == 0)// truong hop neu la ID_1
					{
					   int k=0;
 62c:	60 e0       	ldi	r22, 0x00	; 0
 62e:	70 e0       	ldi	r23, 0x00	; 0
 630:	80 e0       	ldi	r24, 0x00	; 0
 632:	90 e0       	ldi	r25, 0x00	; 0
					   temp_tb_1/=j;
					   itoa(temp_tb_1,data_temp_1,10);//kiem tra lai xem ky tu cuoi cua data_temp_1 co phai la null chua thi moi la string dc
			
					   do
					   {
						   hum_tb_1+=du_lieu_hum_1[k];
 634:	fb 01       	movw	r30, r22
 636:	ee 0f       	add	r30, r30
 638:	ff 1f       	adc	r31, r31
 63a:	2f eb       	ldi	r18, 0xBF	; 191
 63c:	30 e0       	ldi	r19, 0x00	; 0
 63e:	2c 0f       	add	r18, r28
 640:	3d 1f       	adc	r19, r29
 642:	e2 0f       	add	r30, r18
 644:	f3 1f       	adc	r31, r19
 646:	20 81       	ld	r18, Z
 648:	31 81       	ldd	r19, Z+1	; 0x01
 64a:	82 0f       	add	r24, r18
 64c:	93 1f       	adc	r25, r19

						   k++;
 64e:	6f 5f       	subi	r22, 0xFF	; 255
 650:	7f 4f       	sbci	r23, 0xFF	; 255
						   if(k==50)break;
 652:	62 33       	cpi	r22, 0x32	; 50
 654:	71 05       	cpc	r23, r1
 656:	69 f0       	breq	.+26     	; 0x672 <__EEPROM_REGION_LENGTH__+0x272>
					   }while(du_lieu_hum_1[k]!='\0');
 658:	fb 01       	movw	r30, r22
 65a:	ee 0f       	add	r30, r30
 65c:	ff 1f       	adc	r31, r31
 65e:	4f eb       	ldi	r20, 0xBF	; 191
 660:	50 e0       	ldi	r21, 0x00	; 0
 662:	4c 0f       	add	r20, r28
 664:	5d 1f       	adc	r21, r29
 666:	e4 0f       	add	r30, r20
 668:	f5 1f       	adc	r31, r21
 66a:	20 81       	ld	r18, Z
 66c:	31 81       	ldd	r19, Z+1	; 0x01
 66e:	23 2b       	or	r18, r19
 670:	09 f7       	brne	.-62     	; 0x634 <__EEPROM_REGION_LENGTH__+0x234>
					   hum_tb_1/=k;
 672:	0e 94 bd 05 	call	0xb7a	; 0xb7a <__divmodhi4>
 676:	cb 01       	movw	r24, r22
 678:	4a e0       	ldi	r20, 0x0A	; 10
 67a:	be 01       	movw	r22, r28
 67c:	6c 5f       	subi	r22, 0xFC	; 252
 67e:	7f 4f       	sbci	r23, 0xFF	; 255
 680:	0e 94 0f 06 	call	0xc1e	; 0xc1e <__itoa_ncheck>
					   itoa(hum_tb_1,data_hum_1,10);
			   
					   temp_tb_1=0; //reset lai bien tem_tb
					   hum_tb_1=0;   // reset lai hum_tb
					   bien_dem_1++;
 684:	c7 5d       	subi	r28, 0xD7	; 215
 686:	dc 4f       	sbci	r29, 0xFC	; 252
 688:	88 81       	ld	r24, Y
 68a:	99 81       	ldd	r25, Y+1	; 0x01
 68c:	c9 52       	subi	r28, 0x29	; 41
 68e:	d3 40       	sbci	r29, 0x03	; 3
 690:	01 96       	adiw	r24, 0x01	; 1
 692:	c7 5d       	subi	r28, 0xD7	; 215
 694:	dc 4f       	sbci	r29, 0xFC	; 252
 696:	99 83       	std	Y+1, r25	; 0x01
 698:	88 83       	st	Y, r24
 69a:	c9 52       	subi	r28, 0x29	; 41
 69c:	d3 40       	sbci	r29, 0x03	; 3
					   if(bien_dem_1==50){bien_dem_1=0;}
 69e:	c2 97       	sbiw	r24, 0x32	; 50
 6a0:	31 f4       	brne	.+12     	; 0x6ae <__EEPROM_REGION_LENGTH__+0x2ae>
 6a2:	c7 5d       	subi	r28, 0xD7	; 215
 6a4:	dc 4f       	sbci	r29, 0xFC	; 252
 6a6:	19 82       	std	Y+1, r1	; 0x01
 6a8:	18 82       	st	Y, r1
 6aa:	c9 52       	subi	r28, 0x29	; 41
 6ac:	d3 40       	sbci	r29, 0x03	; 3
					}   
			
			
				if(strcmp(luu_tru_ID,ID_2) == 0) // neu la ID_2
 6ae:	be 01       	movw	r22, r28
 6b0:	61 5e       	subi	r22, 0xE1	; 225
 6b2:	7f 4f       	sbci	r23, 0xFF	; 255
 6b4:	ce 01       	movw	r24, r28
 6b6:	87 5b       	subi	r24, 0xB7	; 183
 6b8:	9f 4f       	sbci	r25, 0xFF	; 255
 6ba:	0e 94 e5 05 	call	0xbca	; 0xbca <strcmp>
 6be:	89 2b       	or	r24, r25
 6c0:	09 f0       	breq	.+2      	; 0x6c4 <__EEPROM_REGION_LENGTH__+0x2c4>
 6c2:	c1 c0       	rjmp	.+386    	; 0x846 <__DATA_REGION_LENGTH__+0x46>
				{
					   int k=0;
					   int j=0;
					   strcpy(a1,strstr(luu_tru,"re"));
 6c4:	60 e0       	ldi	r22, 0x00	; 0
 6c6:	71 e0       	ldi	r23, 0x01	; 1
 6c8:	8e e4       	ldi	r24, 0x4E	; 78
 6ca:	91 e0       	ldi	r25, 0x01	; 1
 6cc:	0e 94 f5 05 	call	0xbea	; 0xbea <strstr>
 6d0:	bc 01       	movw	r22, r24
 6d2:	ce 01       	movw	r24, r28
 6d4:	8d 54       	subi	r24, 0x4D	; 77
 6d6:	9d 4f       	sbci	r25, 0xFD	; 253
 6d8:	0e 94 ee 05 	call	0xbdc	; 0xbdc <strcpy>
					   strcpy(a2,strstr(luu_tru,"ty"));
 6dc:	63 e0       	ldi	r22, 0x03	; 3
 6de:	71 e0       	ldi	r23, 0x01	; 1
 6e0:	8e e4       	ldi	r24, 0x4E	; 78
 6e2:	91 e0       	ldi	r25, 0x01	; 1
 6e4:	0e 94 f5 05 	call	0xbea	; 0xbea <strstr>
 6e8:	bc 01       	movw	r22, r24
 6ea:	ce 01       	movw	r24, r28
 6ec:	8b 51       	subi	r24, 0x1B	; 27
 6ee:	9d 4f       	sbci	r25, 0xFD	; 253
 6f0:	0e 94 ee 05 	call	0xbdc	; 0xbdc <strcpy>
					   temp_2=(a1[4]-'0')*10+(a1[5]-'0');
 6f4:	c9 54       	subi	r28, 0x49	; 73
 6f6:	dd 4f       	sbci	r29, 0xFD	; 253
 6f8:	88 81       	ld	r24, Y
 6fa:	c7 5b       	subi	r28, 0xB7	; 183
 6fc:	d2 40       	sbci	r29, 0x02	; 2
 6fe:	90 e0       	ldi	r25, 0x00	; 0
 700:	c0 97       	sbiw	r24, 0x30	; 48
 702:	9c 01       	movw	r18, r24
 704:	22 0f       	add	r18, r18
 706:	33 1f       	adc	r19, r19
 708:	88 0f       	add	r24, r24
 70a:	99 1f       	adc	r25, r25
 70c:	88 0f       	add	r24, r24
 70e:	99 1f       	adc	r25, r25
 710:	88 0f       	add	r24, r24
 712:	99 1f       	adc	r25, r25
 714:	82 0f       	add	r24, r18
 716:	93 1f       	adc	r25, r19
 718:	c8 54       	subi	r28, 0x48	; 72
 71a:	dd 4f       	sbci	r29, 0xFD	; 253
 71c:	28 81       	ld	r18, Y
 71e:	c8 5b       	subi	r28, 0xB8	; 184
 720:	d2 40       	sbci	r29, 0x02	; 2
 722:	30 e0       	ldi	r19, 0x00	; 0
 724:	20 53       	subi	r18, 0x30	; 48
 726:	31 09       	sbc	r19, r1
 728:	82 0f       	add	r24, r18
 72a:	93 1f       	adc	r25, r19
					   hum_2=(a2[4]-'0')*10+(a2[5]-'0');
 72c:	c7 51       	subi	r28, 0x17	; 23
 72e:	dd 4f       	sbci	r29, 0xFD	; 253
 730:	28 81       	ld	r18, Y
 732:	c9 5e       	subi	r28, 0xE9	; 233
 734:	d2 40       	sbci	r29, 0x02	; 2
 736:	30 e0       	ldi	r19, 0x00	; 0
 738:	20 53       	subi	r18, 0x30	; 48
 73a:	31 09       	sbc	r19, r1
 73c:	a9 01       	movw	r20, r18
 73e:	44 0f       	add	r20, r20
 740:	55 1f       	adc	r21, r21
 742:	22 0f       	add	r18, r18
 744:	33 1f       	adc	r19, r19
 746:	22 0f       	add	r18, r18
 748:	33 1f       	adc	r19, r19
 74a:	22 0f       	add	r18, r18
 74c:	33 1f       	adc	r19, r19
 74e:	24 0f       	add	r18, r20
 750:	35 1f       	adc	r19, r21
 752:	c6 51       	subi	r28, 0x16	; 22
 754:	dd 4f       	sbci	r29, 0xFD	; 253
 756:	48 81       	ld	r20, Y
 758:	ca 5e       	subi	r28, 0xEA	; 234
 75a:	d2 40       	sbci	r29, 0x02	; 2
 75c:	50 e0       	ldi	r21, 0x00	; 0
 75e:	40 53       	subi	r20, 0x30	; 48
 760:	51 09       	sbc	r21, r1
 762:	24 0f       	add	r18, r20
 764:	35 1f       	adc	r19, r21
					   du_lieu_temp_2[bien_dem_2]=temp_2;du_lieu_hum_2[bien_dem_2]=hum_2;
 766:	a5 01       	movw	r20, r10
 768:	44 0f       	add	r20, r20
 76a:	55 1f       	adc	r21, r21
 76c:	e3 e2       	ldi	r30, 0x23	; 35
 76e:	f1 e0       	ldi	r31, 0x01	; 1
 770:	ec 0f       	add	r30, r28
 772:	fd 1f       	adc	r31, r29
 774:	e4 0f       	add	r30, r20
 776:	f5 1f       	adc	r31, r21
 778:	91 83       	std	Z+1, r25	; 0x01
 77a:	80 83       	st	Z, r24
 77c:	e7 e8       	ldi	r30, 0x87	; 135
 77e:	f1 e0       	ldi	r31, 0x01	; 1
 780:	ec 0f       	add	r30, r28
 782:	fd 1f       	adc	r31, r29
 784:	e4 0f       	add	r30, r20
 786:	f5 1f       	adc	r31, r21
 788:	31 83       	std	Z+1, r19	; 0x01
 78a:	20 83       	st	Z, r18
			
			
				if(strcmp(luu_tru_ID,ID_2) == 0) // neu la ID_2
				{
					   int k=0;
					   int j=0;
 78c:	60 e0       	ldi	r22, 0x00	; 0
 78e:	70 e0       	ldi	r23, 0x00	; 0
					   strcpy(a1,strstr(luu_tru,"re"));
					   strcpy(a2,strstr(luu_tru,"ty"));
					   temp_2=(a1[4]-'0')*10+(a1[5]-'0');
					   hum_2=(a2[4]-'0')*10+(a2[5]-'0');
					   du_lieu_temp_2[bien_dem_2]=temp_2;du_lieu_hum_2[bien_dem_2]=hum_2;
 790:	80 e0       	ldi	r24, 0x00	; 0
 792:	90 e0       	ldi	r25, 0x00	; 0
			   
			   
			   
					   do
					   {
						   temp_tb_2+=du_lieu_temp_2[j];
 794:	fb 01       	movw	r30, r22
 796:	ee 0f       	add	r30, r30
 798:	ff 1f       	adc	r31, r31
 79a:	a3 e2       	ldi	r26, 0x23	; 35
 79c:	b1 e0       	ldi	r27, 0x01	; 1
 79e:	ac 0f       	add	r26, r28
 7a0:	bd 1f       	adc	r27, r29
 7a2:	ea 0f       	add	r30, r26
 7a4:	fb 1f       	adc	r31, r27
 7a6:	20 81       	ld	r18, Z
 7a8:	31 81       	ldd	r19, Z+1	; 0x01
 7aa:	82 0f       	add	r24, r18
 7ac:	93 1f       	adc	r25, r19
						   j++;
 7ae:	6f 5f       	subi	r22, 0xFF	; 255
 7b0:	7f 4f       	sbci	r23, 0xFF	; 255
						   if(j==50)break;
 7b2:	62 33       	cpi	r22, 0x32	; 50
 7b4:	71 05       	cpc	r23, r1
 7b6:	49 f0       	breq	.+18     	; 0x7ca <__EEPROM_REGION_LENGTH__+0x3ca>
					   }while(du_lieu_temp_2[j]!='\0');
 7b8:	fb 01       	movw	r30, r22
 7ba:	ee 0f       	add	r30, r30
 7bc:	ff 1f       	adc	r31, r31
 7be:	ea 0f       	add	r30, r26
 7c0:	fb 1f       	adc	r31, r27
 7c2:	20 81       	ld	r18, Z
 7c4:	31 81       	ldd	r19, Z+1	; 0x01
 7c6:	23 2b       	or	r18, r19
 7c8:	29 f7       	brne	.-54     	; 0x794 <__EEPROM_REGION_LENGTH__+0x394>
					   temp_tb_2/=j;
 7ca:	0e 94 bd 05 	call	0xb7a	; 0xb7a <__divmodhi4>
 7ce:	cb 01       	movw	r24, r22
 7d0:	4a e0       	ldi	r20, 0x0A	; 10
 7d2:	be 01       	movw	r22, r28
 7d4:	67 5e       	subi	r22, 0xE7	; 231
 7d6:	7f 4f       	sbci	r23, 0xFF	; 255
 7d8:	0e 94 0f 06 	call	0xc1e	; 0xc1e <__itoa_ncheck>
					}   
			
			
				if(strcmp(luu_tru_ID,ID_2) == 0) // neu la ID_2
				{
					   int k=0;
 7dc:	60 e0       	ldi	r22, 0x00	; 0
 7de:	70 e0       	ldi	r23, 0x00	; 0
 7e0:	80 e0       	ldi	r24, 0x00	; 0
 7e2:	90 e0       	ldi	r25, 0x00	; 0
					   }while(du_lieu_temp_2[j]!='\0');
					   temp_tb_2/=j;
					   itoa(temp_tb_2,data_temp_2,10);
					   do
					   {
						   hum_tb_2+=du_lieu_hum_2[k];
 7e4:	fb 01       	movw	r30, r22
 7e6:	ee 0f       	add	r30, r30
 7e8:	ff 1f       	adc	r31, r31
 7ea:	27 e8       	ldi	r18, 0x87	; 135
 7ec:	31 e0       	ldi	r19, 0x01	; 1
 7ee:	2c 0f       	add	r18, r28
 7f0:	3d 1f       	adc	r19, r29
 7f2:	e2 0f       	add	r30, r18
 7f4:	f3 1f       	adc	r31, r19
 7f6:	20 81       	ld	r18, Z
 7f8:	31 81       	ldd	r19, Z+1	; 0x01
 7fa:	82 0f       	add	r24, r18
 7fc:	93 1f       	adc	r25, r19

						   k++;
 7fe:	6f 5f       	subi	r22, 0xFF	; 255
 800:	7f 4f       	sbci	r23, 0xFF	; 255
						   if(k==50)break;
 802:	62 33       	cpi	r22, 0x32	; 50
 804:	71 05       	cpc	r23, r1
 806:	69 f0       	breq	.+26     	; 0x822 <__DATA_REGION_LENGTH__+0x22>
					   }while(du_lieu_hum_2[k]!='\0');
 808:	fb 01       	movw	r30, r22
 80a:	ee 0f       	add	r30, r30
 80c:	ff 1f       	adc	r31, r31
 80e:	47 e8       	ldi	r20, 0x87	; 135
 810:	51 e0       	ldi	r21, 0x01	; 1
 812:	4c 0f       	add	r20, r28
 814:	5d 1f       	adc	r21, r29
 816:	e4 0f       	add	r30, r20
 818:	f5 1f       	adc	r31, r21
 81a:	20 81       	ld	r18, Z
 81c:	31 81       	ldd	r19, Z+1	; 0x01
 81e:	23 2b       	or	r18, r19
 820:	09 f7       	brne	.-62     	; 0x7e4 <__EEPROM_REGION_LENGTH__+0x3e4>
					   hum_tb_2/=k;
 822:	0e 94 bd 05 	call	0xb7a	; 0xb7a <__divmodhi4>
 826:	cb 01       	movw	r24, r22
 828:	4a e0       	ldi	r20, 0x0A	; 10
 82a:	be 01       	movw	r22, r28
 82c:	64 5e       	subi	r22, 0xE4	; 228
 82e:	7f 4f       	sbci	r23, 0xFF	; 255
 830:	0e 94 0f 06 	call	0xc1e	; 0xc1e <__itoa_ncheck>
					   itoa(hum_tb_2,data_hum_2,10);
			   
					   temp_tb_2=0; //reset lai bien tem_tb
					   hum_tb_2=0;   // reset lai hum_tb
					   bien_dem_2++;
 834:	5f ef       	ldi	r21, 0xFF	; 255
 836:	a5 1a       	sub	r10, r21
 838:	b5 0a       	sbc	r11, r21
					   if(bien_dem_2==50){bien_dem_2=0;}
 83a:	82 e3       	ldi	r24, 0x32	; 50
 83c:	a8 16       	cp	r10, r24
 83e:	b1 04       	cpc	r11, r1
 840:	11 f4       	brne	.+4      	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 842:	a1 2c       	mov	r10, r1
 844:	b1 2c       	mov	r11, r1
				}
				
				if(strcmp(luu_tru_ID,ID_3) == 0)// truong hop neu la ID_3
 846:	be 01       	movw	r22, r28
 848:	69 5c       	subi	r22, 0xC9	; 201
 84a:	7f 4f       	sbci	r23, 0xFF	; 255
 84c:	ce 01       	movw	r24, r28
 84e:	87 5b       	subi	r24, 0xB7	; 183
 850:	9f 4f       	sbci	r25, 0xFF	; 255
 852:	0e 94 e5 05 	call	0xbca	; 0xbca <strcmp>
 856:	89 2b       	or	r24, r25
 858:	09 f0       	breq	.+2      	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
 85a:	c1 c0       	rjmp	.+386    	; 0x9de <__stack+0xdf>
					{
					   int k=0;
					   int j=0;
					   strcpy(a1,strstr(luu_tru,"re"));
 85c:	60 e0       	ldi	r22, 0x00	; 0
 85e:	71 e0       	ldi	r23, 0x01	; 1
 860:	8e e4       	ldi	r24, 0x4E	; 78
 862:	91 e0       	ldi	r25, 0x01	; 1
 864:	0e 94 f5 05 	call	0xbea	; 0xbea <strstr>
 868:	bc 01       	movw	r22, r24
 86a:	ce 01       	movw	r24, r28
 86c:	8d 54       	subi	r24, 0x4D	; 77
 86e:	9d 4f       	sbci	r25, 0xFD	; 253
 870:	0e 94 ee 05 	call	0xbdc	; 0xbdc <strcpy>
					   strcpy(a2,strstr(luu_tru,"ty"));
 874:	63 e0       	ldi	r22, 0x03	; 3
 876:	71 e0       	ldi	r23, 0x01	; 1
 878:	8e e4       	ldi	r24, 0x4E	; 78
 87a:	91 e0       	ldi	r25, 0x01	; 1
 87c:	0e 94 f5 05 	call	0xbea	; 0xbea <strstr>
 880:	bc 01       	movw	r22, r24
 882:	ce 01       	movw	r24, r28
 884:	8b 51       	subi	r24, 0x1B	; 27
 886:	9d 4f       	sbci	r25, 0xFD	; 253
 888:	0e 94 ee 05 	call	0xbdc	; 0xbdc <strcpy>
					   temp_3=(a1[4]-'0')*10+(a1[5]-'0');
 88c:	c9 54       	subi	r28, 0x49	; 73
 88e:	dd 4f       	sbci	r29, 0xFD	; 253
 890:	88 81       	ld	r24, Y
 892:	c7 5b       	subi	r28, 0xB7	; 183
 894:	d2 40       	sbci	r29, 0x02	; 2
 896:	90 e0       	ldi	r25, 0x00	; 0
 898:	c0 97       	sbiw	r24, 0x30	; 48
 89a:	9c 01       	movw	r18, r24
 89c:	22 0f       	add	r18, r18
 89e:	33 1f       	adc	r19, r19
 8a0:	88 0f       	add	r24, r24
 8a2:	99 1f       	adc	r25, r25
 8a4:	88 0f       	add	r24, r24
 8a6:	99 1f       	adc	r25, r25
 8a8:	88 0f       	add	r24, r24
 8aa:	99 1f       	adc	r25, r25
 8ac:	82 0f       	add	r24, r18
 8ae:	93 1f       	adc	r25, r19
 8b0:	c8 54       	subi	r28, 0x48	; 72
 8b2:	dd 4f       	sbci	r29, 0xFD	; 253
 8b4:	28 81       	ld	r18, Y
 8b6:	c8 5b       	subi	r28, 0xB8	; 184
 8b8:	d2 40       	sbci	r29, 0x02	; 2
 8ba:	30 e0       	ldi	r19, 0x00	; 0
 8bc:	20 53       	subi	r18, 0x30	; 48
 8be:	31 09       	sbc	r19, r1
 8c0:	82 0f       	add	r24, r18
 8c2:	93 1f       	adc	r25, r19
					   hum_3=(a2[4]-'0')*10+(a2[5]-'0');
 8c4:	c7 51       	subi	r28, 0x17	; 23
 8c6:	dd 4f       	sbci	r29, 0xFD	; 253
 8c8:	28 81       	ld	r18, Y
 8ca:	c9 5e       	subi	r28, 0xE9	; 233
 8cc:	d2 40       	sbci	r29, 0x02	; 2
 8ce:	30 e0       	ldi	r19, 0x00	; 0
 8d0:	20 53       	subi	r18, 0x30	; 48
 8d2:	31 09       	sbc	r19, r1
 8d4:	a9 01       	movw	r20, r18
 8d6:	44 0f       	add	r20, r20
 8d8:	55 1f       	adc	r21, r21
 8da:	22 0f       	add	r18, r18
 8dc:	33 1f       	adc	r19, r19
 8de:	22 0f       	add	r18, r18
 8e0:	33 1f       	adc	r19, r19
 8e2:	22 0f       	add	r18, r18
 8e4:	33 1f       	adc	r19, r19
 8e6:	24 0f       	add	r18, r20
 8e8:	35 1f       	adc	r19, r21
 8ea:	c6 51       	subi	r28, 0x16	; 22
 8ec:	dd 4f       	sbci	r29, 0xFD	; 253
 8ee:	48 81       	ld	r20, Y
 8f0:	ca 5e       	subi	r28, 0xEA	; 234
 8f2:	d2 40       	sbci	r29, 0x02	; 2
 8f4:	50 e0       	ldi	r21, 0x00	; 0
 8f6:	40 53       	subi	r20, 0x30	; 48
 8f8:	51 09       	sbc	r21, r1
 8fa:	24 0f       	add	r18, r20
 8fc:	35 1f       	adc	r19, r21
					   du_lieu_temp_3[bien_dem_3]=temp_3;
 8fe:	a4 01       	movw	r20, r8
 900:	44 0f       	add	r20, r20
 902:	55 1f       	adc	r21, r21
 904:	eb ee       	ldi	r30, 0xEB	; 235
 906:	f1 e0       	ldi	r31, 0x01	; 1
 908:	ec 0f       	add	r30, r28
 90a:	fd 1f       	adc	r31, r29
 90c:	e4 0f       	add	r30, r20
 90e:	f5 1f       	adc	r31, r21
 910:	91 83       	std	Z+1, r25	; 0x01
 912:	80 83       	st	Z, r24
					   du_lieu_hum_3[bien_dem_3]=hum_3;
 914:	ef e4       	ldi	r30, 0x4F	; 79
 916:	f2 e0       	ldi	r31, 0x02	; 2
 918:	ec 0f       	add	r30, r28
 91a:	fd 1f       	adc	r31, r29
 91c:	e4 0f       	add	r30, r20
 91e:	f5 1f       	adc	r31, r21
 920:	31 83       	std	Z+1, r19	; 0x01
 922:	20 83       	st	Z, r18
				}
				
				if(strcmp(luu_tru_ID,ID_3) == 0)// truong hop neu la ID_3
					{
					   int k=0;
					   int j=0;
 924:	60 e0       	ldi	r22, 0x00	; 0
 926:	70 e0       	ldi	r23, 0x00	; 0
					   strcpy(a1,strstr(luu_tru,"re"));
					   strcpy(a2,strstr(luu_tru,"ty"));
					   temp_3=(a1[4]-'0')*10+(a1[5]-'0');
					   hum_3=(a2[4]-'0')*10+(a2[5]-'0');
					   du_lieu_temp_3[bien_dem_3]=temp_3;
					   du_lieu_hum_3[bien_dem_3]=hum_3;
 928:	80 e0       	ldi	r24, 0x00	; 0
 92a:	90 e0       	ldi	r25, 0x00	; 0
			   
			   
					   do
					   {
						   temp_tb_3+=du_lieu_temp_3[j];
 92c:	fb 01       	movw	r30, r22
 92e:	ee 0f       	add	r30, r30
 930:	ff 1f       	adc	r31, r31
 932:	ab ee       	ldi	r26, 0xEB	; 235
 934:	b1 e0       	ldi	r27, 0x01	; 1
 936:	ac 0f       	add	r26, r28
 938:	bd 1f       	adc	r27, r29
 93a:	ea 0f       	add	r30, r26
 93c:	fb 1f       	adc	r31, r27
 93e:	20 81       	ld	r18, Z
 940:	31 81       	ldd	r19, Z+1	; 0x01
 942:	82 0f       	add	r24, r18
 944:	93 1f       	adc	r25, r19
						   j++;
 946:	6f 5f       	subi	r22, 0xFF	; 255
 948:	7f 4f       	sbci	r23, 0xFF	; 255
						   if(j==50)break;
 94a:	62 33       	cpi	r22, 0x32	; 50
 94c:	71 05       	cpc	r23, r1
 94e:	49 f0       	breq	.+18     	; 0x962 <__stack+0x63>
					   }while(du_lieu_temp_3[j]!='\0');
 950:	fb 01       	movw	r30, r22
 952:	ee 0f       	add	r30, r30
 954:	ff 1f       	adc	r31, r31
 956:	ea 0f       	add	r30, r26
 958:	fb 1f       	adc	r31, r27
 95a:	20 81       	ld	r18, Z
 95c:	31 81       	ldd	r19, Z+1	; 0x01
 95e:	23 2b       	or	r18, r19
 960:	29 f7       	brne	.-54     	; 0x92c <__stack+0x2d>
					   temp_tb_3/=j;
 962:	0e 94 bd 05 	call	0xb7a	; 0xb7a <__divmodhi4>
 966:	cb 01       	movw	r24, r22
 968:	4a e0       	ldi	r20, 0x0A	; 10
 96a:	be 01       	movw	r22, r28
 96c:	6f 5c       	subi	r22, 0xCF	; 207
 96e:	7f 4f       	sbci	r23, 0xFF	; 255
 970:	0e 94 0f 06 	call	0xc1e	; 0xc1e <__itoa_ncheck>
					   if(bien_dem_2==50){bien_dem_2=0;}
				}
				
				if(strcmp(luu_tru_ID,ID_3) == 0)// truong hop neu la ID_3
					{
					   int k=0;
 974:	60 e0       	ldi	r22, 0x00	; 0
 976:	70 e0       	ldi	r23, 0x00	; 0
 978:	80 e0       	ldi	r24, 0x00	; 0
 97a:	90 e0       	ldi	r25, 0x00	; 0
					   temp_tb_3/=j;
					   itoa(temp_tb_3,data_temp_3,10);//kiem tra lai xem ky tu cuoi cua data_temp_1 co phai la null chua thi moi la string dc
			
					   do
					   {
						   hum_tb_3+=du_lieu_hum_3[k];
 97c:	fb 01       	movw	r30, r22
 97e:	ee 0f       	add	r30, r30
 980:	ff 1f       	adc	r31, r31
 982:	2f e4       	ldi	r18, 0x4F	; 79
 984:	32 e0       	ldi	r19, 0x02	; 2
 986:	2c 0f       	add	r18, r28
 988:	3d 1f       	adc	r19, r29
 98a:	e2 0f       	add	r30, r18
 98c:	f3 1f       	adc	r31, r19
 98e:	20 81       	ld	r18, Z
 990:	31 81       	ldd	r19, Z+1	; 0x01
 992:	82 0f       	add	r24, r18
 994:	93 1f       	adc	r25, r19

						   k++;
 996:	6f 5f       	subi	r22, 0xFF	; 255
 998:	7f 4f       	sbci	r23, 0xFF	; 255
						   if(k==50)break;
 99a:	62 33       	cpi	r22, 0x32	; 50
 99c:	71 05       	cpc	r23, r1
 99e:	69 f0       	breq	.+26     	; 0x9ba <__stack+0xbb>
					   }while(du_lieu_hum_3[k]!='\0');
 9a0:	fb 01       	movw	r30, r22
 9a2:	ee 0f       	add	r30, r30
 9a4:	ff 1f       	adc	r31, r31
 9a6:	4f e4       	ldi	r20, 0x4F	; 79
 9a8:	52 e0       	ldi	r21, 0x02	; 2
 9aa:	4c 0f       	add	r20, r28
 9ac:	5d 1f       	adc	r21, r29
 9ae:	e4 0f       	add	r30, r20
 9b0:	f5 1f       	adc	r31, r21
 9b2:	20 81       	ld	r18, Z
 9b4:	31 81       	ldd	r19, Z+1	; 0x01
 9b6:	23 2b       	or	r18, r19
 9b8:	09 f7       	brne	.-62     	; 0x97c <__stack+0x7d>
					   hum_tb_3/=k;
 9ba:	0e 94 bd 05 	call	0xb7a	; 0xb7a <__divmodhi4>
 9be:	cb 01       	movw	r24, r22
 9c0:	4a e0       	ldi	r20, 0x0A	; 10
 9c2:	be 01       	movw	r22, r28
 9c4:	6c 5c       	subi	r22, 0xCC	; 204
 9c6:	7f 4f       	sbci	r23, 0xFF	; 255
 9c8:	0e 94 0f 06 	call	0xc1e	; 0xc1e <__itoa_ncheck>
					   itoa(hum_tb_3,data_hum_3,10);
			   
					   temp_tb_3=0; //reset lai bien tem_tb
					   hum_tb_3=0;   // reset lai hum_tb
					   bien_dem_3++;
 9cc:	5f ef       	ldi	r21, 0xFF	; 255
 9ce:	85 1a       	sub	r8, r21
 9d0:	95 0a       	sbc	r9, r21
					   if(bien_dem_3==50){bien_dem_3=0;}
 9d2:	82 e3       	ldi	r24, 0x32	; 50
 9d4:	88 16       	cp	r8, r24
 9d6:	91 04       	cpc	r9, r1
 9d8:	11 f4       	brne	.+4      	; 0x9de <__stack+0xdf>
 9da:	81 2c       	mov	r8, r1
 9dc:	91 2c       	mov	r9, r1
				
				
				
		
		
				bien_dem_luu_tru = 0;
 9de:	10 92 4d 01 	sts	0x014D, r1	; 0x80014d <__data_end+0x1>
 9e2:	10 92 4c 01 	sts	0x014C, r1	; 0x80014c <__data_end>
				luu_tru_ready = 0;
 9e6:	10 92 b3 01 	sts	0x01B3, r1	; 0x8001b3 <luu_tru_ready+0x1>
 9ea:	10 92 b2 01 	sts	0x01B2, r1	; 0x8001b2 <luu_tru_ready>
				for(int a=0;a<50;a++){
 9ee:	80 e0       	ldi	r24, 0x00	; 0
 9f0:	90 e0       	ldi	r25, 0x00	; 0
 9f2:	05 c0       	rjmp	.+10     	; 0x9fe <__stack+0xff>
					luu_tru[a]=0;
 9f4:	fc 01       	movw	r30, r24
 9f6:	e2 5b       	subi	r30, 0xB2	; 178
 9f8:	fe 4f       	sbci	r31, 0xFE	; 254
 9fa:	10 82       	st	Z, r1
				
		
		
				bien_dem_luu_tru = 0;
				luu_tru_ready = 0;
				for(int a=0;a<50;a++){
 9fc:	01 96       	adiw	r24, 0x01	; 1
 9fe:	82 33       	cpi	r24, 0x32	; 50
 a00:	91 05       	cpc	r25, r1
 a02:	c4 f3       	brlt	.-16     	; 0x9f4 <__stack+0xf5>
					luu_tru[a]=0;
				}		
		}
		
		
		button_1 = PINC&(1<<PINC1);
 a04:	26 b1       	in	r18, 0x06	; 6
 a06:	22 70       	andi	r18, 0x02	; 2
 a08:	30 e0       	ldi	r19, 0x00	; 0
		button_2 = PINC&(1<<PINC2);
 a0a:	86 b1       	in	r24, 0x06	; 6
 a0c:	84 70       	andi	r24, 0x04	; 4
 a0e:	90 e0       	ldi	r25, 0x00	; 0
		
		if(button_1!=button_1_before)
 a10:	e2 16       	cp	r14, r18
 a12:	f3 06       	cpc	r15, r19
 a14:	41 f1       	breq	.+80     	; 0xa66 <__stack+0x167>
		{
			if(button_1==0)
 a16:	21 15       	cp	r18, r1
 a18:	31 05       	cpc	r19, r1
 a1a:	21 f5       	brne	.+72     	; 0xa64 <__stack+0x165>
			{
				index++;
 a1c:	0f 5f       	subi	r16, 0xFF	; 255
 a1e:	1f 4f       	sbci	r17, 0xFF	; 255
				if(index==3)
 a20:	03 30       	cpi	r16, 0x03	; 3
 a22:	11 05       	cpc	r17, r1
 a24:	11 f4       	brne	.+4      	; 0xa2a <__stack+0x12b>
				{
					index=0;
 a26:	00 e0       	ldi	r16, 0x00	; 0
 a28:	10 e0       	ldi	r17, 0x00	; 0
				}
				real_time_data_temp = data_temp[index];
 a2a:	a8 01       	movw	r20, r16
 a2c:	44 0f       	add	r20, r20
 a2e:	55 1f       	adc	r21, r21
 a30:	e7 e1       	ldi	r30, 0x17	; 23
 a32:	f3 e0       	ldi	r31, 0x03	; 3
 a34:	ec 0f       	add	r30, r28
 a36:	fd 1f       	adc	r31, r29
 a38:	e4 0f       	add	r30, r20
 a3a:	f5 1f       	adc	r31, r21
 a3c:	60 80       	ld	r6, Z
 a3e:	71 80       	ldd	r7, Z+1	; 0x01
				real_time_data_hum = data_hum[index];
 a40:	ed e1       	ldi	r30, 0x1D	; 29
 a42:	f3 e0       	ldi	r31, 0x03	; 3
 a44:	ec 0f       	add	r30, r28
 a46:	fd 1f       	adc	r31, r29
 a48:	e4 0f       	add	r30, r20
 a4a:	f5 1f       	adc	r31, r21
 a4c:	40 80       	ld	r4, Z
 a4e:	51 80       	ldd	r5, Z+1	; 0x01
				real_time_ID = ID[index];
 a50:	e3 e2       	ldi	r30, 0x23	; 35
 a52:	f3 e0       	ldi	r31, 0x03	; 3
 a54:	ec 0f       	add	r30, r28
 a56:	fd 1f       	adc	r31, r29
 a58:	e4 0f       	add	r30, r20
 a5a:	f5 1f       	adc	r31, r21
 a5c:	20 80       	ld	r2, Z
 a5e:	31 80       	ldd	r3, Z+1	; 0x01
			}
			button_1_before = button_1;
 a60:	79 01       	movw	r14, r18
 a62:	01 c0       	rjmp	.+2      	; 0xa66 <__stack+0x167>
 a64:	79 01       	movw	r14, r18
		}
		
		if(button_2!=button_2_before)
 a66:	c8 16       	cp	r12, r24
 a68:	d9 06       	cpc	r13, r25
 a6a:	29 f1       	breq	.+74     	; 0xab6 <__stack+0x1b7>
		{
			if(button_2==0)
 a6c:	00 97       	sbiw	r24, 0x00	; 0
 a6e:	11 f5       	brne	.+68     	; 0xab4 <__stack+0x1b5>
			{
				index--;
 a70:	01 50       	subi	r16, 0x01	; 1
 a72:	11 09       	sbc	r17, r1
 a74:	10 f4       	brcc	.+4      	; 0xa7a <__stack+0x17b>
				if(index==-1)
				{
					index=2;
 a76:	02 e0       	ldi	r16, 0x02	; 2
 a78:	10 e0       	ldi	r17, 0x00	; 0
				}
				real_time_data_temp = data_temp[index];
 a7a:	98 01       	movw	r18, r16
 a7c:	22 0f       	add	r18, r18
 a7e:	33 1f       	adc	r19, r19
 a80:	e7 e1       	ldi	r30, 0x17	; 23
 a82:	f3 e0       	ldi	r31, 0x03	; 3
 a84:	ec 0f       	add	r30, r28
 a86:	fd 1f       	adc	r31, r29
 a88:	e2 0f       	add	r30, r18
 a8a:	f3 1f       	adc	r31, r19
 a8c:	60 80       	ld	r6, Z
 a8e:	71 80       	ldd	r7, Z+1	; 0x01
				real_time_data_hum = data_hum[index];
 a90:	ed e1       	ldi	r30, 0x1D	; 29
 a92:	f3 e0       	ldi	r31, 0x03	; 3
 a94:	ec 0f       	add	r30, r28
 a96:	fd 1f       	adc	r31, r29
 a98:	e2 0f       	add	r30, r18
 a9a:	f3 1f       	adc	r31, r19
 a9c:	40 80       	ld	r4, Z
 a9e:	51 80       	ldd	r5, Z+1	; 0x01
				real_time_ID = ID[index];
 aa0:	e3 e2       	ldi	r30, 0x23	; 35
 aa2:	f3 e0       	ldi	r31, 0x03	; 3
 aa4:	ec 0f       	add	r30, r28
 aa6:	fd 1f       	adc	r31, r29
 aa8:	e2 0f       	add	r30, r18
 aaa:	f3 1f       	adc	r31, r19
 aac:	20 80       	ld	r2, Z
 aae:	31 80       	ldd	r3, Z+1	; 0x01
			}
			button_2_before = button_2;
 ab0:	6c 01       	movw	r12, r24
 ab2:	01 c0       	rjmp	.+2      	; 0xab6 <__stack+0x1b7>
 ab4:	6c 01       	movw	r12, r24
		}
		
		
		
		lcd_clear();
 ab6:	0e 94 76 01 	call	0x2ec	; 0x2ec <lcd_clear>
	    lcd_print(real_time_ID);
 aba:	82 2d       	mov	r24, r2
 abc:	93 2d       	mov	r25, r3
 abe:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_print>
		lcd_gotoxy(2,1);
 ac2:	61 e0       	ldi	r22, 0x01	; 1
 ac4:	82 e0       	ldi	r24, 0x02	; 2
 ac6:	0e 94 37 01 	call	0x26e	; 0x26e <lcd_gotoxy>
		lcd_print("tem:");lcd_print(real_time_data_temp);lcdData(0xDF);lcd_print("C ");
 aca:	86 e0       	ldi	r24, 0x06	; 6
 acc:	91 e0       	ldi	r25, 0x01	; 1
 ace:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_print>
 ad2:	86 2d       	mov	r24, r6
 ad4:	97 2d       	mov	r25, r7
 ad6:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_print>
 ada:	8f ed       	ldi	r24, 0xDF	; 223
 adc:	0e 94 86 00 	call	0x10c	; 0x10c <lcdData>
 ae0:	8b e0       	ldi	r24, 0x0B	; 11
 ae2:	91 e0       	ldi	r25, 0x01	; 1
 ae4:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_print>
		lcd_print("hum:");lcd_print(real_time_data_hum);lcd_print("%");
 ae8:	8e e0       	ldi	r24, 0x0E	; 14
 aea:	91 e0       	ldi	r25, 0x01	; 1
 aec:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_print>
 af0:	84 2d       	mov	r24, r4
 af2:	95 2d       	mov	r25, r5
 af4:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_print>
 af8:	83 e1       	ldi	r24, 0x13	; 19
 afa:	91 e0       	ldi	r25, 0x01	; 1
 afc:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_print>
 b00:	bf ef       	ldi	r27, 0xFF	; 255
 b02:	21 ee       	ldi	r18, 0xE1	; 225
 b04:	34 e0       	ldi	r19, 0x04	; 4
 b06:	b1 50       	subi	r27, 0x01	; 1
 b08:	20 40       	sbci	r18, 0x00	; 0
 b0a:	30 40       	sbci	r19, 0x00	; 0
 b0c:	e1 f7       	brne	.-8      	; 0xb06 <__stack+0x207>
 b0e:	00 c0       	rjmp	.+0      	; 0xb10 <__stack+0x211>
 b10:	00 00       	nop
 b12:	d1 cc       	rjmp	.-1630   	; 0x4b6 <__EEPROM_REGION_LENGTH__+0xb6>

00000b14 <__vector_18>:
		
	}
}

ISR(USART_RX_vect)
{
 b14:	1f 92       	push	r1
 b16:	0f 92       	push	r0
 b18:	0f b6       	in	r0, 0x3f	; 63
 b1a:	0f 92       	push	r0
 b1c:	11 24       	eor	r1, r1
 b1e:	8f 93       	push	r24
 b20:	9f 93       	push	r25
 b22:	ef 93       	push	r30
 b24:	ff 93       	push	r31
	char c;
	c=UDR0;
 b26:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	
	if(c=='}')
 b2a:	8d 37       	cpi	r24, 0x7D	; 125
 b2c:	59 f4       	brne	.+22     	; 0xb44 <__vector_18+0x30>
	{
		bien_dem_luu_tru = 0;
 b2e:	10 92 4d 01 	sts	0x014D, r1	; 0x80014d <__data_end+0x1>
 b32:	10 92 4c 01 	sts	0x014C, r1	; 0x80014c <__data_end>
		luu_tru_ready = 1;
 b36:	81 e0       	ldi	r24, 0x01	; 1
 b38:	90 e0       	ldi	r25, 0x00	; 0
 b3a:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <luu_tru_ready+0x1>
 b3e:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <luu_tru_ready>
 b42:	12 c0       	rjmp	.+36     	; 0xb68 <__vector_18+0x54>
	}
	else if(c!='}')
 b44:	8d 37       	cpi	r24, 0x7D	; 125
 b46:	81 f0       	breq	.+32     	; 0xb68 <__vector_18+0x54>
	{
		luu_tru[bien_dem_luu_tru] = c;
 b48:	e0 91 4c 01 	lds	r30, 0x014C	; 0x80014c <__data_end>
 b4c:	f0 91 4d 01 	lds	r31, 0x014D	; 0x80014d <__data_end+0x1>
 b50:	e2 5b       	subi	r30, 0xB2	; 178
 b52:	fe 4f       	sbci	r31, 0xFE	; 254
 b54:	80 83       	st	Z, r24
		bien_dem_luu_tru++;
 b56:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <__data_end>
 b5a:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <__data_end+0x1>
 b5e:	01 96       	adiw	r24, 0x01	; 1
 b60:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <__data_end+0x1>
 b64:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <__data_end>
	}
}
 b68:	ff 91       	pop	r31
 b6a:	ef 91       	pop	r30
 b6c:	9f 91       	pop	r25
 b6e:	8f 91       	pop	r24
 b70:	0f 90       	pop	r0
 b72:	0f be       	out	0x3f, r0	; 63
 b74:	0f 90       	pop	r0
 b76:	1f 90       	pop	r1
 b78:	18 95       	reti

00000b7a <__divmodhi4>:
 b7a:	97 fb       	bst	r25, 7
 b7c:	07 2e       	mov	r0, r23
 b7e:	16 f4       	brtc	.+4      	; 0xb84 <__divmodhi4+0xa>
 b80:	00 94       	com	r0
 b82:	07 d0       	rcall	.+14     	; 0xb92 <__divmodhi4_neg1>
 b84:	77 fd       	sbrc	r23, 7
 b86:	09 d0       	rcall	.+18     	; 0xb9a <__divmodhi4_neg2>
 b88:	0e 94 d1 05 	call	0xba2	; 0xba2 <__udivmodhi4>
 b8c:	07 fc       	sbrc	r0, 7
 b8e:	05 d0       	rcall	.+10     	; 0xb9a <__divmodhi4_neg2>
 b90:	3e f4       	brtc	.+14     	; 0xba0 <__divmodhi4_exit>

00000b92 <__divmodhi4_neg1>:
 b92:	90 95       	com	r25
 b94:	81 95       	neg	r24
 b96:	9f 4f       	sbci	r25, 0xFF	; 255
 b98:	08 95       	ret

00000b9a <__divmodhi4_neg2>:
 b9a:	70 95       	com	r23
 b9c:	61 95       	neg	r22
 b9e:	7f 4f       	sbci	r23, 0xFF	; 255

00000ba0 <__divmodhi4_exit>:
 ba0:	08 95       	ret

00000ba2 <__udivmodhi4>:
 ba2:	aa 1b       	sub	r26, r26
 ba4:	bb 1b       	sub	r27, r27
 ba6:	51 e1       	ldi	r21, 0x11	; 17
 ba8:	07 c0       	rjmp	.+14     	; 0xbb8 <__udivmodhi4_ep>

00000baa <__udivmodhi4_loop>:
 baa:	aa 1f       	adc	r26, r26
 bac:	bb 1f       	adc	r27, r27
 bae:	a6 17       	cp	r26, r22
 bb0:	b7 07       	cpc	r27, r23
 bb2:	10 f0       	brcs	.+4      	; 0xbb8 <__udivmodhi4_ep>
 bb4:	a6 1b       	sub	r26, r22
 bb6:	b7 0b       	sbc	r27, r23

00000bb8 <__udivmodhi4_ep>:
 bb8:	88 1f       	adc	r24, r24
 bba:	99 1f       	adc	r25, r25
 bbc:	5a 95       	dec	r21
 bbe:	a9 f7       	brne	.-22     	; 0xbaa <__udivmodhi4_loop>
 bc0:	80 95       	com	r24
 bc2:	90 95       	com	r25
 bc4:	bc 01       	movw	r22, r24
 bc6:	cd 01       	movw	r24, r26
 bc8:	08 95       	ret

00000bca <strcmp>:
 bca:	fb 01       	movw	r30, r22
 bcc:	dc 01       	movw	r26, r24
 bce:	8d 91       	ld	r24, X+
 bd0:	01 90       	ld	r0, Z+
 bd2:	80 19       	sub	r24, r0
 bd4:	01 10       	cpse	r0, r1
 bd6:	d9 f3       	breq	.-10     	; 0xbce <strcmp+0x4>
 bd8:	99 0b       	sbc	r25, r25
 bda:	08 95       	ret

00000bdc <strcpy>:
 bdc:	fb 01       	movw	r30, r22
 bde:	dc 01       	movw	r26, r24
 be0:	01 90       	ld	r0, Z+
 be2:	0d 92       	st	X+, r0
 be4:	00 20       	and	r0, r0
 be6:	e1 f7       	brne	.-8      	; 0xbe0 <strcpy+0x4>
 be8:	08 95       	ret

00000bea <strstr>:
 bea:	fb 01       	movw	r30, r22
 bec:	51 91       	ld	r21, Z+
 bee:	55 23       	and	r21, r21
 bf0:	a9 f0       	breq	.+42     	; 0xc1c <strstr+0x32>
 bf2:	bf 01       	movw	r22, r30
 bf4:	dc 01       	movw	r26, r24
 bf6:	4d 91       	ld	r20, X+
 bf8:	45 17       	cp	r20, r21
 bfa:	41 11       	cpse	r20, r1
 bfc:	e1 f7       	brne	.-8      	; 0xbf6 <strstr+0xc>
 bfe:	59 f4       	brne	.+22     	; 0xc16 <strstr+0x2c>
 c00:	cd 01       	movw	r24, r26
 c02:	01 90       	ld	r0, Z+
 c04:	00 20       	and	r0, r0
 c06:	49 f0       	breq	.+18     	; 0xc1a <strstr+0x30>
 c08:	4d 91       	ld	r20, X+
 c0a:	40 15       	cp	r20, r0
 c0c:	41 11       	cpse	r20, r1
 c0e:	c9 f3       	breq	.-14     	; 0xc02 <strstr+0x18>
 c10:	fb 01       	movw	r30, r22
 c12:	41 11       	cpse	r20, r1
 c14:	ef cf       	rjmp	.-34     	; 0xbf4 <strstr+0xa>
 c16:	81 e0       	ldi	r24, 0x01	; 1
 c18:	90 e0       	ldi	r25, 0x00	; 0
 c1a:	01 97       	sbiw	r24, 0x01	; 1
 c1c:	08 95       	ret

00000c1e <__itoa_ncheck>:
 c1e:	bb 27       	eor	r27, r27
 c20:	4a 30       	cpi	r20, 0x0A	; 10
 c22:	31 f4       	brne	.+12     	; 0xc30 <__itoa_ncheck+0x12>
 c24:	99 23       	and	r25, r25
 c26:	22 f4       	brpl	.+8      	; 0xc30 <__itoa_ncheck+0x12>
 c28:	bd e2       	ldi	r27, 0x2D	; 45
 c2a:	90 95       	com	r25
 c2c:	81 95       	neg	r24
 c2e:	9f 4f       	sbci	r25, 0xFF	; 255
 c30:	0c 94 1b 06 	jmp	0xc36	; 0xc36 <__utoa_common>

00000c34 <__utoa_ncheck>:
 c34:	bb 27       	eor	r27, r27

00000c36 <__utoa_common>:
 c36:	fb 01       	movw	r30, r22
 c38:	55 27       	eor	r21, r21
 c3a:	aa 27       	eor	r26, r26
 c3c:	88 0f       	add	r24, r24
 c3e:	99 1f       	adc	r25, r25
 c40:	aa 1f       	adc	r26, r26
 c42:	a4 17       	cp	r26, r20
 c44:	10 f0       	brcs	.+4      	; 0xc4a <__utoa_common+0x14>
 c46:	a4 1b       	sub	r26, r20
 c48:	83 95       	inc	r24
 c4a:	50 51       	subi	r21, 0x10	; 16
 c4c:	b9 f7       	brne	.-18     	; 0xc3c <__utoa_common+0x6>
 c4e:	a0 5d       	subi	r26, 0xD0	; 208
 c50:	aa 33       	cpi	r26, 0x3A	; 58
 c52:	08 f0       	brcs	.+2      	; 0xc56 <__utoa_common+0x20>
 c54:	a9 5d       	subi	r26, 0xD9	; 217
 c56:	a1 93       	st	Z+, r26
 c58:	00 97       	sbiw	r24, 0x00	; 0
 c5a:	79 f7       	brne	.-34     	; 0xc3a <__utoa_common+0x4>
 c5c:	b1 11       	cpse	r27, r1
 c5e:	b1 93       	st	Z+, r27
 c60:	11 92       	st	Z+, r1
 c62:	cb 01       	movw	r24, r22
 c64:	0c 94 34 06 	jmp	0xc68	; 0xc68 <strrev>

00000c68 <strrev>:
 c68:	dc 01       	movw	r26, r24
 c6a:	fc 01       	movw	r30, r24
 c6c:	67 2f       	mov	r22, r23
 c6e:	71 91       	ld	r23, Z+
 c70:	77 23       	and	r23, r23
 c72:	e1 f7       	brne	.-8      	; 0xc6c <strrev+0x4>
 c74:	32 97       	sbiw	r30, 0x02	; 2
 c76:	04 c0       	rjmp	.+8      	; 0xc80 <strrev+0x18>
 c78:	7c 91       	ld	r23, X
 c7a:	6d 93       	st	X+, r22
 c7c:	70 83       	st	Z, r23
 c7e:	62 91       	ld	r22, -Z
 c80:	ae 17       	cp	r26, r30
 c82:	bf 07       	cpc	r27, r31
 c84:	c8 f3       	brcs	.-14     	; 0xc78 <strrev+0x10>
 c86:	08 95       	ret

00000c88 <_exit>:
 c88:	f8 94       	cli

00000c8a <__stop_program>:
 c8a:	ff cf       	rjmp	.-2      	; 0xc8a <__stop_program>
